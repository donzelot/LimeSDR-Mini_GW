-- generated by pyha 0.0.10
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_float_types.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.complex_pkg.all;
    use work.PyhaUtil.all;
    use work.Typedefs.all;
    use work.all;
    use work.DataValid_21.all;
    use work.DataValid_20.all;
    use work.DataValid_19.all;
    use work.DataValid_0.all;
    use work.DataValid_17.all;
    use work.DataValid_18.all;
    use work.ShiftRegister_0.all;
    use work.DownCounter_0.all;
    use work.MovingAverage_0.all;
    use work.ShiftRegister_1.all;
    use work.MovingAverage_1.all;
    use work.ShiftRegister_2.all;
    use work.DCRemoval_0.all;
    use work.Windower_0.all;
    use work.ShiftRegister_15.all;
    use work.DownCounter_14.all;
    use work.StageR2SDF_12.all;
    use work.ShiftRegister_3.all;
    use work.DownCounter_2.all;
    use work.StageR2SDF_0.all;
    use work.ShiftRegister_4.all;
    use work.DownCounter_3.all;
    use work.StageR2SDF_1.all;
    use work.DownCounter_4.all;
    use work.StageR2SDF_2.all;
    use work.ShiftRegister_6.all;
    use work.DownCounter_5.all;
    use work.StageR2SDF_3.all;
    use work.ShiftRegister_7.all;
    use work.DownCounter_6.all;
    use work.StageR2SDF_4.all;
    use work.ShiftRegister_8.all;
    use work.DownCounter_7.all;
    use work.StageR2SDF_5.all;
    use work.ShiftRegister_9.all;
    use work.DownCounter_8.all;
    use work.StageR2SDF_6.all;
    use work.ShiftRegister_10.all;
    use work.DownCounter_9.all;
    use work.StageR2SDF_7.all;
    use work.ShiftRegister_11.all;
    use work.DownCounter_10.all;
    use work.StageR2SDF_8.all;
    use work.ShiftRegister_12.all;
    use work.DownCounter_11.all;
    use work.StageR2SDF_9.all;
    use work.ShiftRegister_13.all;
    use work.DownCounter_12.all;
    use work.StageR2SDF_10.all;
    use work.ShiftRegister_14.all;
    use work.StageR2SDF_11.all;
    use work.R2SDF_0.all;
    use work.FFTPower_0.all;
    use work.RAM_0.all;
    use work.DownCounter_16.all;
    use work.BitreversalFFTshiftAVGPool_0.all;


package Spectrogram_0 is
    type self_t is record
        dc_removal: DCRemoval_0.self_t;
        windower: Windower_0.self_t;
        fft: R2SDF_0.self_t;
        power: FFTPower_0.self_t;
        dec: BitreversalFFTshiftAVGPool_0.self_t;
    end record;
    type Spectrogram_0_self_t_list_t is array (natural range <>) of Spectrogram_0.self_t;

    type self_t_const is record
        AVG_FREQ_AXIS: integer;
        AVG_TIME_AXIS: integer;
        FFT_SIZE: integer;
        dc_removal: DCRemoval_0.self_t_const;
        windower: Windower_0.self_t_const;
        fft: R2SDF_0.self_t_const;
        power: FFTPower_0.self_t_const;
        dec: BitreversalFFTshiftAVGPool_0.self_t_const;
    end record;
    type Spectrogram_0_self_t_const_list_t_const is array (natural range <>) of Spectrogram_0.self_t_const;

    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; inp: DataValid_21.self_t; ret_0:out DataValid_19.self_t);
    function Spectrogram(dc_removal: DCRemoval_0.self_t; windower: Windower_0.self_t; fft: R2SDF_0.self_t; power: FFTPower_0.self_t; dec: BitreversalFFTshiftAVGPool_0.self_t) return self_t;
end package;

package body Spectrogram_0 is
    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; inp: DataValid_21.self_t; ret_0:out DataValid_19.self_t) is

        variable dc_out: DataValid_0.self_t;
        variable window_out: DataValid_0.self_t;
        variable fft_out: DataValid_17.self_t;
        variable power_out: DataValid_18.self_t;
        variable dec_out: DataValid_19.self_t;
        variable pyha_ret_0: DataValid_0.self_t;
        variable pyha_ret_1: DataValid_0.self_t;
        variable pyha_ret_2: DataValid_17.self_t;
        variable pyha_ret_3: DataValid_18.self_t;
        variable pyha_ret_4: DataValid_19.self_t;
    begin
        DCRemoval_0.main(self.dc_removal, self_next.dc_removal, self_const.dc_removal, inp, pyha_ret_0);
        dc_out := pyha_ret_0;
        Windower_0.main(self.windower, self_next.windower, self_const.windower, dc_out, pyha_ret_1);
        window_out := pyha_ret_1;
        R2SDF_0.main(self.fft, self_next.fft, self_const.fft, window_out, pyha_ret_2);
        fft_out := pyha_ret_2;
        FFTPower_0.main(self.power, self_next.power, self_const.power, fft_out, pyha_ret_3);
        power_out := pyha_ret_3;
        BitreversalFFTshiftAVGPool_0.main(self.dec, self_next.dec, self_const.dec, power_out, pyha_ret_4);
        dec_out := pyha_ret_4;
        ret_0 := dec_out;
        return;
    end procedure;

    function Spectrogram(dc_removal: DCRemoval_0.self_t; windower: Windower_0.self_t; fft: R2SDF_0.self_t; power: FFTPower_0.self_t; dec: BitreversalFFTshiftAVGPool_0.self_t) return self_t is
        -- constructor
        variable self: self_t;
    begin
        self.dc_removal := dc_removal;
        self.windower := windower;
        self.fft := fft;
        self.power := power;
        self.dec := dec;
        return self;
    end function;
end package body;
