-- generated by pyha 0.0.11
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_float_types.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.complex_pkg.all;
    use work.PyhaUtil.all;
    use work.Typedefs.all;
    use work.all;
    use work.DataValid_0.all;
    use work.DataValid_1.all;
    use work.DataValid_2.all;
    use work.DataValid_3.all;
    use work.DataValid_4.all;
    use work.ShiftRegister_5.all;
    use work.DownCounter_6.all;
    use work.MovingAverage_7.all;
    use work.ShiftRegister_8.all;
    use work.MovingAverage_9.all;
    use work.ShiftRegister_10.all;
    use work.DCRemoval_11.all;
    use work.Windower_12.all;
    use work.ShiftRegister_13.all;
    use work.DownCounter_14.all;
    use work.StageR2SDF_15.all;
    use work.ShiftRegister_16.all;
    use work.DownCounter_17.all;
    use work.StageR2SDF_18.all;
    use work.ShiftRegister_19.all;
    use work.DownCounter_20.all;
    use work.StageR2SDF_21.all;
    use work.ShiftRegister_22.all;
    use work.DownCounter_23.all;
    use work.StageR2SDF_24.all;
    use work.ShiftRegister_25.all;
    use work.DownCounter_26.all;
    use work.StageR2SDF_27.all;
    use work.ShiftRegister_28.all;
    use work.DownCounter_29.all;
    use work.StageR2SDF_30.all;
    use work.ShiftRegister_31.all;
    use work.DownCounter_32.all;
    use work.StageR2SDF_33.all;
    use work.ShiftRegister_34.all;
    use work.DownCounter_35.all;
    use work.StageR2SDF_36.all;
    use work.ShiftRegister_37.all;
    use work.StageR2SDF_38.all;
    use work.R2SDF_39.all;
    use work.FFTPower_40.all;
    use work.RAM_41.all;
    use work.DownCounter_42.all;
    use work.BitreversalFFTshiftAVGPool_43.all;

-- Spectrogram
-- -----------
-- Combines a bunch of cores to build a spectrogram system.
-- Args:
-- fft_size: see R2SDF
-- avg_freq_axis: see BitreversalFFTshiftAVGPool
-- avg_time_axis: see BitreversalFFTshiftAVGPool
-- window_type: see Windower
-- fft_twiddle_bits: see R2SDF
-- window_bits: see Windower
-- dc_removal_len: see DCRemoval
package Spectrogram_44 is
    type self_t is record
        dc_removal: DCRemoval_11.self_t;
        windower: Windower_12.self_t;
        fft: R2SDF_39.self_t;
        power: FFTPower_40.self_t;
        dec: BitreversalFFTshiftAVGPool_43.self_t;
    end record;
    type Spectrogram_44_self_t_list_t is array (natural range <>) of Spectrogram_44.self_t;

    type self_t_const is record
        AVG_FREQ_AXIS: integer;
        AVG_TIME_AXIS: integer;
        FFT_SIZE: integer;
        dc_removal: DCRemoval_11.self_t_const;
        windower: Windower_12.self_t_const;
        fft: R2SDF_39.self_t_const;
        power: FFTPower_40.self_t_const;
        dec: BitreversalFFTshiftAVGPool_43.self_t_const;
    end record;
    type Spectrogram_44_self_t_const_list_t_const is array (natural range <>) of Spectrogram_44.self_t_const;

    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; input: DataValid_0.self_t; ret_0:out DataValid_2.self_t);
    function Spectrogram(dc_removal: DCRemoval_11.self_t; windower: Windower_12.self_t; fft: R2SDF_39.self_t; power: FFTPower_40.self_t; dec: BitreversalFFTshiftAVGPool_43.self_t) return self_t;
end package;

package body Spectrogram_44 is
    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; input: DataValid_0.self_t; ret_0:out DataValid_2.self_t) is
    -- Args:
    -- input (DataValid): -1.0 ... 1.0 range, up to 18 bits
    -- Returns:
    -- DataValid: Result from the BitreversalFFTshiftAVGPool core
        variable dc_out: DataValid_3.self_t;
        variable window_out: DataValid_3.self_t;
        variable fft_out: DataValid_3.self_t;
        variable power_out: DataValid_4.self_t;
        variable dec_out: DataValid_2.self_t;
        variable pyha_ret_0: DataValid_3.self_t;
        variable pyha_ret_1: DataValid_3.self_t;
        variable pyha_ret_2: DataValid_3.self_t;
        variable pyha_ret_3: DataValid_4.self_t;
        variable pyha_ret_4: DataValid_2.self_t;
    begin
        DCRemoval_11.main(self.dc_removal, self_next.dc_removal, self_const.dc_removal, input, pyha_ret_0);
        dc_out := pyha_ret_0;
        Windower_12.main(self.windower, self_next.windower, self_const.windower, dc_out, pyha_ret_1);
        window_out := pyha_ret_1;
        R2SDF_39.main(self.fft, self_next.fft, self_const.fft, window_out, pyha_ret_2);
        fft_out := pyha_ret_2;
        FFTPower_40.main(self.power, self_next.power, self_const.power, fft_out, pyha_ret_3);
        power_out := pyha_ret_3;
        BitreversalFFTshiftAVGPool_43.main(self.dec, self_next.dec, self_const.dec, power_out, pyha_ret_4);
        dec_out := pyha_ret_4;
        ret_0 := dec_out;
        return;
    end procedure;

    function Spectrogram(dc_removal: DCRemoval_11.self_t; windower: Windower_12.self_t; fft: R2SDF_39.self_t; power: FFTPower_40.self_t; dec: BitreversalFFTshiftAVGPool_43.self_t) return self_t is
        -- constructor
        variable self: self_t;
    begin
        self.dc_removal := dc_removal;
        self.windower := windower;
        self.fft := fft;
        self.power := power;
        self.dec := dec;
        return self;
    end function;
end package body;
