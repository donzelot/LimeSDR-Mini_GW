-- generated by pyha 0.0.11
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.complex_pkg.all;
    use work.PyhaUtil.all;
    use work.Typedefs.all;
    use work.all;

entity  top is
    port (
        clk, rst_n: in std_logic;

        -- look #153 if you want enable
        -- enable: in std_logic;

        -- inputs
        in0: in std_logic_vector(24 downto 0);

        -- outputs
        out0: out std_logic_vector(32 downto 0)
    );
end entity;

architecture arch of top is
    -- make reset procedure callable
    function init_regs return SpectrogramLimeSDR_45.self_t is
        variable self: SpectrogramLimeSDR_45.self_t;
    begin
            self.spect.dc_removal.averages_0.shr.data := (Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11));
            self.spect.dc_removal.averages_0.shr.to_push := Complex(0.0, 0.0, 0, -11);
            self.spect.dc_removal.averages_0.acc := Complex(0.0, 0.0, 10, -17);
            self.spect.dc_removal.averages_0.output.data := Complex(0.0, 0.0, 0, -17);
            self.spect.dc_removal.averages_0.output.valid := False;
            self.spect.dc_removal.averages_0.start_counter.counter := Sfix(1, 1, 0);
            self.spect.dc_removal.averages_1.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.spect.dc_removal.averages_1.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.dc_removal.averages_1.acc := Complex(0.0, 0.0, 10, -17);
            self.spect.dc_removal.averages_1.output.data := Complex(0.0, 0.0, 0, -17);
            self.spect.dc_removal.averages_1.output.valid := False;
            self.spect.dc_removal.averages_1.start_counter.counter := Sfix(1, 1, 0);
            self.spect.dc_removal.delayed_input.data := (Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11), Complex(0.0, 0.0, 0, -11));
            self.spect.dc_removal.delayed_input.to_push := Complex(0.0, 0.0, 0, -11);
            self.spect.dc_removal.output.data := Complex(0.0, 0.0, 0, -17);
            self.spect.dc_removal.output.valid := False;
            self.spect.windower.window_pure := (Sfix(0.0800018310546875, 0, -17), Sfix(0.0800323486328125, 0, -17), Sfix(0.08013916015625, 0, -17), Sfix(0.08031463623046875, 0, -17), Sfix(0.0805511474609375, 0, -17), Sfix(0.08086395263671875, 0, -17), Sfix(0.08124542236328125, 0, -17), Sfix(0.081695556640625, 0, -17), Sfix(0.08221435546875, 0, -17), Sfix(0.08280181884765625, 0, -17), Sfix(0.08345794677734375, 0, -17), Sfix(0.0841827392578125, 0, -17), Sfix(0.0849761962890625, 0, -17), Sfix(0.08583831787109375, 0, -17), Sfix(0.08676910400390625, 0, -17), Sfix(0.0877685546875, 0, -17), Sfix(0.088836669921875, 0, -17), Sfix(0.08997344970703125, 0, -17), Sfix(0.09117889404296875, 0, -17), Sfix(0.09244537353515625, 0, -17), Sfix(0.09378814697265625, 0, -17), Sfix(0.09519195556640625, 0, -17), Sfix(0.0966644287109375, 0, -17), Sfix(0.09820556640625, 0, -17), Sfix(0.0998077392578125, 0, -17), Sfix(0.10147857666015625, 0, -17), Sfix(0.10321807861328125, 0, -17), Sfix(0.10501861572265625, 0, -17), Sfix(0.1068878173828125, 0, -17), Sfix(0.10882568359375, 0, -17), Sfix(0.1108245849609375, 0, -17), Sfix(0.112884521484375, 0, -17), Sfix(0.11501312255859375, 0, -17), Sfix(0.11721038818359375, 0, -17), Sfix(0.1194610595703125, 0, -17), Sfix(0.1217803955078125, 0, -17), Sfix(0.12416839599609375, 0, -17), Sfix(0.12660980224609375, 0, -17), Sfix(0.129119873046875, 0, -17), Sfix(0.131683349609375, 0, -17), Sfix(0.13431549072265625, 0, -17), Sfix(0.1370086669921875, 0, -17), Sfix(0.13976287841796875, 0, -17), Sfix(0.14257049560546875, 0, -17), Sfix(0.14544677734375, 0, -17), Sfix(0.14837646484375, 0, -17), Sfix(0.1513671875, 0, -17), Sfix(0.1544189453125, 0, -17), Sfix(0.15752410888671875, 0, -17), Sfix(0.1606903076171875, 0, -17), Sfix(0.163909912109375, 0, -17), Sfix(0.1671905517578125, 0, -17), Sfix(0.17052459716796875, 0, -17), Sfix(0.17391204833984375, 0, -17), Sfix(0.17736053466796875, 0, -17), Sfix(0.1808624267578125, 0, -17), Sfix(0.184417724609375, 0, -17), Sfix(0.18802642822265625, 0, -17), Sfix(0.191680908203125, 0, -17), Sfix(0.19539642333984375, 0, -17), Sfix(0.19916534423828125, 0, -17), Sfix(0.20298004150390625, 0, -17), Sfix(0.20684814453125, 0, -17), Sfix(0.21076202392578125, 0, -17), Sfix(0.21472930908203125, 0, -17), Sfix(0.21875, 0, -17), Sfix(0.222808837890625, 0, -17), Sfix(0.22692108154296875, 0, -17), Sfix(0.2310791015625, 0, -17), Sfix(0.23529052734375, 0, -17), Sfix(0.23954010009765625, 0, -17), Sfix(0.24383544921875, 0, -17), Sfix(0.24817657470703125, 0, -17), Sfix(0.2525634765625, 0, -17), Sfix(0.25699615478515625, 0, -17), Sfix(0.26146697998046875, 0, -17), Sfix(0.2659759521484375, 0, -17), Sfix(0.27053070068359375, 0, -17), Sfix(0.2751312255859375, 0, -17), Sfix(0.27976226806640625, 0, -17), Sfix(0.2844390869140625, 0, -17), Sfix(0.289154052734375, 0, -17), Sfix(0.2938995361328125, 0, -17), Sfix(0.2986907958984375, 0, -17), Sfix(0.3035125732421875, 0, -17), Sfix(0.30837249755859375, 0, -17), Sfix(0.31327056884765625, 0, -17), Sfix(0.31819915771484375, 0, -17), Sfix(0.32315826416015625, 0, -17), Sfix(0.328155517578125, 0, -17), Sfix(0.3331756591796875, 0, -17), Sfix(0.33823394775390625, 0, -17), Sfix(0.34332275390625, 0, -17), Sfix(0.34844207763671875, 0, -17), Sfix(0.3535919189453125, 0, -17), Sfix(0.3587646484375, 0, -17), Sfix(0.3639678955078125, 0, -17), Sfix(0.36919403076171875, 0, -17), Sfix(0.37445068359375, 0, -17), Sfix(0.379730224609375, 0, -17), Sfix(0.38503265380859375, 0, -17), Sfix(0.39035797119140625, 0, -17), Sfix(0.3957061767578125, 0, -17), Sfix(0.4010772705078125, 0, -17), Sfix(0.40647125244140625, 0, -17), Sfix(0.4118804931640625, 0, -17), Sfix(0.4173126220703125, 0, -17), Sfix(0.422760009765625, 0, -17), Sfix(0.42823028564453125, 0, -17), Sfix(0.4337158203125, 0, -17), Sfix(0.43921661376953125, 0, -17), Sfix(0.44472503662109375, 0, -17), Sfix(0.45025634765625, 0, -17), Sfix(0.45580291748046875, 0, -17), Sfix(0.46135711669921875, 0, -17), Sfix(0.46692657470703125, 0, -17), Sfix(0.472503662109375, 0, -17), Sfix(0.47809600830078125, 0, -17), Sfix(0.4836883544921875, 0, -17), Sfix(0.48929595947265625, 0, -17), Sfix(0.49491119384765625, 0, -17), Sfix(0.5005340576171875, 0, -17), Sfix(0.5061569213867188, 0, -17), Sfix(0.5117950439453125, 0, -17), Sfix(0.517425537109375, 0, -17), Sfix(0.5230712890625, 0, -17), Sfix(0.5287094116210938, 0, -17), Sfix(0.5343551635742188, 0, -17), Sfix(0.5400009155273438, 0, -17), Sfix(0.5456466674804688, 0, -17), Sfix(0.5512924194335938, 0, -17), Sfix(0.5569305419921875, 0, -17), Sfix(0.5625686645507812, 0, -17), Sfix(0.568206787109375, 0, -17), Sfix(0.5738372802734375, 0, -17), Sfix(0.5794677734375, 0, -17), Sfix(0.5850906372070312, 0, -17), Sfix(0.5907058715820312, 0, -17), Sfix(0.5963058471679688, 0, -17), Sfix(0.6019058227539062, 0, -17), Sfix(0.6074981689453125, 0, -17), Sfix(0.6130752563476562, 0, -17), Sfix(0.6186447143554688, 0, -17), Sfix(0.6241989135742188, 0, -17), Sfix(0.6297378540039062, 0, -17), Sfix(0.6352691650390625, 0, -17), Sfix(0.6407852172851562, 0, -17), Sfix(0.6462860107421875, 0, -17), Sfix(0.6517715454101562, 0, -17), Sfix(0.6572418212890625, 0, -17), Sfix(0.662689208984375, 0, -17), Sfix(0.668121337890625, 0, -17), Sfix(0.6735305786132812, 0, -17), Sfix(0.678924560546875, 0, -17), Sfix(0.684295654296875, 0, -17), Sfix(0.6896438598632812, 0, -17), Sfix(0.6949691772460938, 0, -17), Sfix(0.7002716064453125, 0, -17), Sfix(0.7055511474609375, 0, -17), Sfix(0.7108078002929688, 0, -17), Sfix(0.716033935546875, 0, -17), Sfix(0.7212371826171875, 0, -17), Sfix(0.726409912109375, 0, -17), Sfix(0.7315597534179688, 0, -17), Sfix(0.7366790771484375, 0, -17), Sfix(0.74176025390625, 0, -17), Sfix(0.7468185424804688, 0, -17), Sfix(0.7518463134765625, 0, -17), Sfix(0.7568435668945312, 0, -17), Sfix(0.7618026733398438, 0, -17), Sfix(0.7667312622070312, 0, -17), Sfix(0.7716293334960938, 0, -17), Sfix(0.7764892578125, 0, -17), Sfix(0.78131103515625, 0, -17), Sfix(0.786102294921875, 0, -17), Sfix(0.7908477783203125, 0, -17), Sfix(0.795562744140625, 0, -17), Sfix(0.8002395629882812, 0, -17), Sfix(0.80487060546875, 0, -17), Sfix(0.8094635009765625, 0, -17), Sfix(0.8140182495117188, 0, -17), Sfix(0.8185348510742188, 0, -17), Sfix(0.8230056762695312, 0, -17), Sfix(0.8274383544921875, 0, -17), Sfix(0.831817626953125, 0, -17), Sfix(0.8361587524414062, 0, -17), Sfix(0.8404617309570312, 0, -17), Sfix(0.8447113037109375, 0, -17), Sfix(0.8489151000976562, 0, -17), Sfix(0.8530731201171875, 0, -17), Sfix(0.8571853637695312, 0, -17), Sfix(0.8612518310546875, 0, -17), Sfix(0.8652725219726562, 0, -17), Sfix(0.8692398071289062, 0, -17), Sfix(0.8731536865234375, 0, -17), Sfix(0.8770217895507812, 0, -17), Sfix(0.8808364868164062, 0, -17), Sfix(0.8846054077148438, 0, -17), Sfix(0.8883132934570312, 0, -17), Sfix(0.8919754028320312, 0, -17), Sfix(0.8955841064453125, 0, -17), Sfix(0.899139404296875, 0, -17), Sfix(0.9026412963867188, 0, -17), Sfix(0.9060821533203125, 0, -17), Sfix(0.9094772338867188, 0, -17), Sfix(0.912811279296875, 0, -17), Sfix(0.9160919189453125, 0, -17), Sfix(0.9193115234375, 0, -17), Sfix(0.9224777221679688, 0, -17), Sfix(0.9255828857421875, 0, -17), Sfix(0.9286346435546875, 0, -17), Sfix(0.9316253662109375, 0, -17), Sfix(0.9345550537109375, 0, -17), Sfix(0.9374237060546875, 0, -17), Sfix(0.9402389526367188, 0, -17), Sfix(0.9429931640625, 0, -17), Sfix(0.9456863403320312, 0, -17), Sfix(0.9483108520507812, 0, -17), Sfix(0.9508819580078125, 0, -17), Sfix(0.9533920288085938, 0, -17), Sfix(0.9558334350585938, 0, -17), Sfix(0.9582138061523438, 0, -17), Sfix(0.9605331420898438, 0, -17), Sfix(0.9627914428710938, 0, -17), Sfix(0.9649810791015625, 0, -17), Sfix(0.9671096801757812, 0, -17), Sfix(0.96917724609375, 0, -17), Sfix(0.9711761474609375, 0, -17), Sfix(0.973114013671875, 0, -17), Sfix(0.9749755859375, 0, -17), Sfix(0.9767837524414062, 0, -17), Sfix(0.9785232543945312, 0, -17), Sfix(0.980194091796875, 0, -17), Sfix(0.9817962646484375, 0, -17), Sfix(0.98333740234375, 0, -17), Sfix(0.9848098754882812, 0, -17), Sfix(0.9862136840820312, 0, -17), Sfix(0.987548828125, 0, -17), Sfix(0.9888229370117188, 0, -17), Sfix(0.9900283813476562, 0, -17), Sfix(0.9911575317382812, 0, -17), Sfix(0.9922256469726562, 0, -17), Sfix(0.99322509765625, 0, -17), Sfix(0.9941558837890625, 0, -17), Sfix(0.9950180053710938, 0, -17), Sfix(0.9958114624023438, 0, -17), Sfix(0.9965438842773438, 0, -17), Sfix(0.9972000122070312, 0, -17), Sfix(0.9977874755859375, 0, -17), Sfix(0.9983062744140625, 0, -17), Sfix(0.9987564086914062, 0, -17), Sfix(0.9991378784179688, 0, -17), Sfix(0.9994430541992188, 0, -17), Sfix(0.9996871948242188, 0, -17), Sfix(0.9998626708984375, 0, -17), Sfix(0.9999618530273438, 0, -17), Sfix(0.9999923706054688, 0, -17), Sfix(0.9999618530273438, 0, -17), Sfix(0.9998626708984375, 0, -17), Sfix(0.9996871948242188, 0, -17), Sfix(0.9994430541992188, 0, -17), Sfix(0.9991378784179688, 0, -17), Sfix(0.9987564086914062, 0, -17), Sfix(0.9983062744140625, 0, -17), Sfix(0.9977874755859375, 0, -17), Sfix(0.9972000122070312, 0, -17), Sfix(0.9965438842773438, 0, -17), Sfix(0.9958114624023438, 0, -17), Sfix(0.9950180053710938, 0, -17), Sfix(0.9941558837890625, 0, -17), Sfix(0.99322509765625, 0, -17), Sfix(0.9922256469726562, 0, -17), Sfix(0.9911575317382812, 0, -17), Sfix(0.9900283813476562, 0, -17), Sfix(0.9888229370117188, 0, -17), Sfix(0.987548828125, 0, -17), Sfix(0.9862136840820312, 0, -17), Sfix(0.9848098754882812, 0, -17), Sfix(0.98333740234375, 0, -17), Sfix(0.9817962646484375, 0, -17), Sfix(0.980194091796875, 0, -17), Sfix(0.9785232543945312, 0, -17), Sfix(0.9767837524414062, 0, -17), Sfix(0.9749755859375, 0, -17), Sfix(0.973114013671875, 0, -17), Sfix(0.9711761474609375, 0, -17), Sfix(0.96917724609375, 0, -17), Sfix(0.9671096801757812, 0, -17), Sfix(0.9649810791015625, 0, -17), Sfix(0.9627914428710938, 0, -17), Sfix(0.9605331420898438, 0, -17), Sfix(0.9582138061523438, 0, -17), Sfix(0.9558334350585938, 0, -17), Sfix(0.9533920288085938, 0, -17), Sfix(0.9508819580078125, 0, -17), Sfix(0.9483108520507812, 0, -17), Sfix(0.9456863403320312, 0, -17), Sfix(0.9429931640625, 0, -17), Sfix(0.9402389526367188, 0, -17), Sfix(0.9374237060546875, 0, -17), Sfix(0.9345550537109375, 0, -17), Sfix(0.9316253662109375, 0, -17), Sfix(0.9286346435546875, 0, -17), Sfix(0.9255828857421875, 0, -17), Sfix(0.9224777221679688, 0, -17), Sfix(0.9193115234375, 0, -17), Sfix(0.9160919189453125, 0, -17), Sfix(0.912811279296875, 0, -17), Sfix(0.9094772338867188, 0, -17), Sfix(0.9060821533203125, 0, -17), Sfix(0.9026412963867188, 0, -17), Sfix(0.899139404296875, 0, -17), Sfix(0.8955841064453125, 0, -17), Sfix(0.8919754028320312, 0, -17), Sfix(0.8883132934570312, 0, -17), Sfix(0.8846054077148438, 0, -17), Sfix(0.8808364868164062, 0, -17), Sfix(0.8770217895507812, 0, -17), Sfix(0.8731536865234375, 0, -17), Sfix(0.8692398071289062, 0, -17), Sfix(0.8652725219726562, 0, -17), Sfix(0.8612518310546875, 0, -17), Sfix(0.8571853637695312, 0, -17), Sfix(0.8530731201171875, 0, -17), Sfix(0.8489151000976562, 0, -17), Sfix(0.8447113037109375, 0, -17), Sfix(0.8404617309570312, 0, -17), Sfix(0.8361587524414062, 0, -17), Sfix(0.831817626953125, 0, -17), Sfix(0.8274383544921875, 0, -17), Sfix(0.8230056762695312, 0, -17), Sfix(0.8185348510742188, 0, -17), Sfix(0.8140182495117188, 0, -17), Sfix(0.8094635009765625, 0, -17), Sfix(0.80487060546875, 0, -17), Sfix(0.8002395629882812, 0, -17), Sfix(0.795562744140625, 0, -17), Sfix(0.7908477783203125, 0, -17), Sfix(0.786102294921875, 0, -17), Sfix(0.78131103515625, 0, -17), Sfix(0.7764892578125, 0, -17), Sfix(0.7716293334960938, 0, -17), Sfix(0.7667312622070312, 0, -17), Sfix(0.7618026733398438, 0, -17), Sfix(0.7568435668945312, 0, -17), Sfix(0.7518463134765625, 0, -17), Sfix(0.7468185424804688, 0, -17), Sfix(0.74176025390625, 0, -17), Sfix(0.7366790771484375, 0, -17), Sfix(0.7315597534179688, 0, -17), Sfix(0.726409912109375, 0, -17), Sfix(0.7212371826171875, 0, -17), Sfix(0.716033935546875, 0, -17), Sfix(0.7108078002929688, 0, -17), Sfix(0.7055511474609375, 0, -17), Sfix(0.7002716064453125, 0, -17), Sfix(0.6949691772460938, 0, -17), Sfix(0.6896438598632812, 0, -17), Sfix(0.684295654296875, 0, -17), Sfix(0.678924560546875, 0, -17), Sfix(0.6735305786132812, 0, -17), Sfix(0.668121337890625, 0, -17), Sfix(0.662689208984375, 0, -17), Sfix(0.6572418212890625, 0, -17), Sfix(0.6517715454101562, 0, -17), Sfix(0.6462860107421875, 0, -17), Sfix(0.6407852172851562, 0, -17), Sfix(0.6352691650390625, 0, -17), Sfix(0.6297378540039062, 0, -17), Sfix(0.6241989135742188, 0, -17), Sfix(0.6186447143554688, 0, -17), Sfix(0.6130752563476562, 0, -17), Sfix(0.6074981689453125, 0, -17), Sfix(0.6019058227539062, 0, -17), Sfix(0.5963058471679688, 0, -17), Sfix(0.5907058715820312, 0, -17), Sfix(0.5850906372070312, 0, -17), Sfix(0.5794677734375, 0, -17), Sfix(0.5738372802734375, 0, -17), Sfix(0.568206787109375, 0, -17), Sfix(0.5625686645507812, 0, -17), Sfix(0.5569305419921875, 0, -17), Sfix(0.5512924194335938, 0, -17), Sfix(0.5456466674804688, 0, -17), Sfix(0.5400009155273438, 0, -17), Sfix(0.5343551635742188, 0, -17), Sfix(0.5287094116210938, 0, -17), Sfix(0.5230712890625, 0, -17), Sfix(0.517425537109375, 0, -17), Sfix(0.5117950439453125, 0, -17), Sfix(0.5061569213867188, 0, -17), Sfix(0.5005340576171875, 0, -17), Sfix(0.49491119384765625, 0, -17), Sfix(0.48929595947265625, 0, -17), Sfix(0.4836883544921875, 0, -17), Sfix(0.47809600830078125, 0, -17), Sfix(0.472503662109375, 0, -17), Sfix(0.46692657470703125, 0, -17), Sfix(0.46135711669921875, 0, -17), Sfix(0.45580291748046875, 0, -17), Sfix(0.45025634765625, 0, -17), Sfix(0.44472503662109375, 0, -17), Sfix(0.43921661376953125, 0, -17), Sfix(0.4337158203125, 0, -17), Sfix(0.42823028564453125, 0, -17), Sfix(0.422760009765625, 0, -17), Sfix(0.4173126220703125, 0, -17), Sfix(0.4118804931640625, 0, -17), Sfix(0.40647125244140625, 0, -17), Sfix(0.4010772705078125, 0, -17), Sfix(0.3957061767578125, 0, -17), Sfix(0.39035797119140625, 0, -17), Sfix(0.38503265380859375, 0, -17), Sfix(0.379730224609375, 0, -17), Sfix(0.37445068359375, 0, -17), Sfix(0.36919403076171875, 0, -17), Sfix(0.3639678955078125, 0, -17), Sfix(0.3587646484375, 0, -17), Sfix(0.3535919189453125, 0, -17), Sfix(0.34844207763671875, 0, -17), Sfix(0.34332275390625, 0, -17), Sfix(0.33823394775390625, 0, -17), Sfix(0.3331756591796875, 0, -17), Sfix(0.328155517578125, 0, -17), Sfix(0.32315826416015625, 0, -17), Sfix(0.31819915771484375, 0, -17), Sfix(0.31327056884765625, 0, -17), Sfix(0.30837249755859375, 0, -17), Sfix(0.3035125732421875, 0, -17), Sfix(0.2986907958984375, 0, -17), Sfix(0.2938995361328125, 0, -17), Sfix(0.289154052734375, 0, -17), Sfix(0.2844390869140625, 0, -17), Sfix(0.27976226806640625, 0, -17), Sfix(0.2751312255859375, 0, -17), Sfix(0.27053070068359375, 0, -17), Sfix(0.2659759521484375, 0, -17), Sfix(0.26146697998046875, 0, -17), Sfix(0.25699615478515625, 0, -17), Sfix(0.2525634765625, 0, -17), Sfix(0.24817657470703125, 0, -17), Sfix(0.24383544921875, 0, -17), Sfix(0.23954010009765625, 0, -17), Sfix(0.23529052734375, 0, -17), Sfix(0.2310791015625, 0, -17), Sfix(0.22692108154296875, 0, -17), Sfix(0.222808837890625, 0, -17), Sfix(0.21875, 0, -17), Sfix(0.21472930908203125, 0, -17), Sfix(0.21076202392578125, 0, -17), Sfix(0.20684814453125, 0, -17), Sfix(0.20298004150390625, 0, -17), Sfix(0.19916534423828125, 0, -17), Sfix(0.19539642333984375, 0, -17), Sfix(0.191680908203125, 0, -17), Sfix(0.18802642822265625, 0, -17), Sfix(0.184417724609375, 0, -17), Sfix(0.1808624267578125, 0, -17), Sfix(0.17736053466796875, 0, -17), Sfix(0.17391204833984375, 0, -17), Sfix(0.17052459716796875, 0, -17), Sfix(0.1671905517578125, 0, -17), Sfix(0.163909912109375, 0, -17), Sfix(0.1606903076171875, 0, -17), Sfix(0.15752410888671875, 0, -17), Sfix(0.1544189453125, 0, -17), Sfix(0.1513671875, 0, -17), Sfix(0.14837646484375, 0, -17), Sfix(0.14544677734375, 0, -17), Sfix(0.14257049560546875, 0, -17), Sfix(0.13976287841796875, 0, -17), Sfix(0.1370086669921875, 0, -17), Sfix(0.13431549072265625, 0, -17), Sfix(0.131683349609375, 0, -17), Sfix(0.129119873046875, 0, -17), Sfix(0.12660980224609375, 0, -17), Sfix(0.12416839599609375, 0, -17), Sfix(0.1217803955078125, 0, -17), Sfix(0.1194610595703125, 0, -17), Sfix(0.11721038818359375, 0, -17), Sfix(0.11501312255859375, 0, -17), Sfix(0.112884521484375, 0, -17), Sfix(0.1108245849609375, 0, -17), Sfix(0.10882568359375, 0, -17), Sfix(0.1068878173828125, 0, -17), Sfix(0.10501861572265625, 0, -17), Sfix(0.10321807861328125, 0, -17), Sfix(0.10147857666015625, 0, -17), Sfix(0.0998077392578125, 0, -17), Sfix(0.09820556640625, 0, -17), Sfix(0.0966644287109375, 0, -17), Sfix(0.09519195556640625, 0, -17), Sfix(0.09378814697265625, 0, -17), Sfix(0.09244537353515625, 0, -17), Sfix(0.09117889404296875, 0, -17), Sfix(0.08997344970703125, 0, -17), Sfix(0.088836669921875, 0, -17), Sfix(0.0877685546875, 0, -17), Sfix(0.08676910400390625, 0, -17), Sfix(0.08583831787109375, 0, -17), Sfix(0.0849761962890625, 0, -17), Sfix(0.0841827392578125, 0, -17), Sfix(0.08345794677734375, 0, -17), Sfix(0.08280181884765625, 0, -17), Sfix(0.08221435546875, 0, -17), Sfix(0.081695556640625, 0, -17), Sfix(0.08124542236328125, 0, -17), Sfix(0.08086395263671875, 0, -17), Sfix(0.0805511474609375, 0, -17), Sfix(0.08031463623046875, 0, -17), Sfix(0.08013916015625, 0, -17), Sfix(0.0800323486328125, 0, -17));
            self.spect.windower.output.data := Complex(0.0, 0.0, 0, -17);
            self.spect.windower.output.valid := False;
            self.spect.windower.index_counter := 1;
            self.spect.windower.coef := Sfix(0.080078125, 0, -10);
            self.spect.fft.stages_0.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.spect.fft.stages_0.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_0.twiddle := Complex(0.9990234375, 0.0, 0, -10);
            self.spect.fft.stages_0.stage1_out := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_0.stage2_out := Complex(0.0, 0.0, 0, -27);
            self.spect.fft.stages_0.output_index := 0;
            self.spect.fft.stages_0.mode_delay := False;
            self.spect.fft.stages_0.control := 0;
            self.spect.fft.stages_0.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_0.\out\.valid := False;
            self.spect.fft.stages_0.start_counter.counter := Sfix(258, 9, 0);
            self.spect.fft.stages_1.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.spect.fft.stages_1.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_1.twiddle := Complex(0.9990234375, 0.0, 0, -10);
            self.spect.fft.stages_1.stage1_out := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_1.stage2_out := Complex(0.0, 0.0, 0, -27);
            self.spect.fft.stages_1.output_index := 0;
            self.spect.fft.stages_1.mode_delay := False;
            self.spect.fft.stages_1.control := 0;
            self.spect.fft.stages_1.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_1.\out\.valid := False;
            self.spect.fft.stages_1.start_counter.counter := Sfix(130, 8, 0);
            self.spect.fft.stages_2.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.spect.fft.stages_2.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_2.twiddle := Complex(0.9990234375, 0.0, 0, -10);
            self.spect.fft.stages_2.stage1_out := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_2.stage2_out := Complex(0.0, 0.0, 0, -27);
            self.spect.fft.stages_2.output_index := 0;
            self.spect.fft.stages_2.mode_delay := False;
            self.spect.fft.stages_2.control := 0;
            self.spect.fft.stages_2.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_2.\out\.valid := False;
            self.spect.fft.stages_2.start_counter.counter := Sfix(66, 7, 0);
            self.spect.fft.stages_3.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.spect.fft.stages_3.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_3.twiddle := Complex(0.9990234375, 0.0, 0, -10);
            self.spect.fft.stages_3.stage1_out := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_3.stage2_out := Complex(0.0, 0.0, 0, -27);
            self.spect.fft.stages_3.output_index := 0;
            self.spect.fft.stages_3.mode_delay := False;
            self.spect.fft.stages_3.control := 0;
            self.spect.fft.stages_3.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_3.\out\.valid := False;
            self.spect.fft.stages_3.start_counter.counter := Sfix(34, 6, 0);
            self.spect.fft.stages_4.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.spect.fft.stages_4.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_4.twiddle := Complex(0.9990234375, 0.0, 0, -10);
            self.spect.fft.stages_4.stage1_out := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_4.stage2_out := Complex(0.0, 0.0, 0, -27);
            self.spect.fft.stages_4.output_index := 0;
            self.spect.fft.stages_4.mode_delay := False;
            self.spect.fft.stages_4.control := 0;
            self.spect.fft.stages_4.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_4.\out\.valid := False;
            self.spect.fft.stages_4.start_counter.counter := Sfix(18, 5, 0);
            self.spect.fft.stages_5.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.spect.fft.stages_5.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_5.twiddle := Complex(0.9990234375, 0.0, 0, -10);
            self.spect.fft.stages_5.stage1_out := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_5.stage2_out := Complex(0.0, 0.0, 0, -27);
            self.spect.fft.stages_5.output_index := 0;
            self.spect.fft.stages_5.mode_delay := False;
            self.spect.fft.stages_5.control := 0;
            self.spect.fft.stages_5.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_5.\out\.valid := False;
            self.spect.fft.stages_5.start_counter.counter := Sfix(10, 4, 0);
            self.spect.fft.stages_6.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.spect.fft.stages_6.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_6.twiddle := Complex(0.9990234375, 0.0, 0, -10);
            self.spect.fft.stages_6.stage1_out := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_6.stage2_out := Complex(0.0, 0.0, 0, -27);
            self.spect.fft.stages_6.output_index := 0;
            self.spect.fft.stages_6.mode_delay := False;
            self.spect.fft.stages_6.control := 0;
            self.spect.fft.stages_6.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_6.\out\.valid := False;
            self.spect.fft.stages_6.start_counter.counter := Sfix(6, 3, 0);
            self.spect.fft.stages_7.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.spect.fft.stages_7.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_7.twiddle := Complex(0.9990234375, 0.0, 0, -10);
            self.spect.fft.stages_7.stage1_out := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_7.stage2_out := Complex(0.0, 0.0, 0, -27);
            self.spect.fft.stages_7.output_index := 0;
            self.spect.fft.stages_7.mode_delay := False;
            self.spect.fft.stages_7.control := 0;
            self.spect.fft.stages_7.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_7.\out\.valid := False;
            self.spect.fft.stages_7.start_counter.counter := Sfix(4, 3, 0);
            self.spect.fft.stages_8.shr.data(0) := (Complex(0.0, 0.0, 0, -17));
            self.spect.fft.stages_8.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_8.twiddle := Complex(0.9990234375, 0.0, 0, -10);
            self.spect.fft.stages_8.stage1_out := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_8.stage2_out := Complex(0.0, 0.0, 0, -27);
            self.spect.fft.stages_8.output_index := 0;
            self.spect.fft.stages_8.mode_delay := False;
            self.spect.fft.stages_8.control := 0;
            self.spect.fft.stages_8.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.stages_8.\out\.valid := False;
            self.spect.fft.stages_8.start_counter.counter := Sfix(3, 2, 0);
            self.spect.fft.output.data := Complex(0.0, 0.0, 0, -17);
            self.spect.fft.output.valid := False;
            self.spect.power.output.data := Sfix(0.0, 1, -34);
            self.spect.power.output.valid := False;
            self.spect.dec.time_axis_counter := 256;
            self.spect.dec.state := True;
            self.spect.dec.ram(0).data := (Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34));
            self.spect.dec.ram(0).write_value := Sfix(0.0, 1, -34);
            self.spect.dec.ram(0).write_enable := False;
            self.spect.dec.ram(0).write_address := 0;
            self.spect.dec.ram(0).read_reg := Sfix(0.0, 1, -34);
            self.spect.dec.ram(0).read_address := 0;
            self.spect.dec.ram(1).data := (Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34), Sfix(0.0, 1, -34));
            self.spect.dec.ram(1).write_value := Sfix(0.0, 1, -34);
            self.spect.dec.ram(1).write_enable := False;
            self.spect.dec.ram(1).write_address := 0;
            self.spect.dec.ram(1).read_reg := Sfix(0.0, 1, -34);
            self.spect.dec.ram(1).read_address := 0;
            self.spect.dec.out_valid := False;
            self.spect.dec.control := 0;
            self.spect.dec.output.data := Sfix(0.0, -7, -42);
            self.spect.dec.output.valid := False;
            self.spect.dec.final_counter.counter := Sfix(513, 10, 0);
            self.spect.dec.start_counter.counter := Sfix(513, 10, 0);
            self.output.data := Sfix(0.0, -7, -38);
            self.output.valid := False;
          return self;
    end function;

    function init_constants return SpectrogramLimeSDR_45.self_t_const is
        variable self: SpectrogramLimeSDR_45.self_t_const;
    begin
            self.spect.AVG_FREQ_AXIS := 1;
            self.spect.AVG_TIME_AXIS := 256;
            self.spect.FFT_SIZE := 512;
            self.spect.dc_removal.WINDOW_LEN := 1024;
            self.spect.dc_removal.averages_0.WINDOW_LEN := 1024;
            self.spect.dc_removal.averages_0.BIT_GROWTH := 10;
            self.spect.dc_removal.averages_0.start_counter.START_VALUE := Sfix(1, 1, 0);
            self.spect.dc_removal.averages_1.WINDOW_LEN := 1024;
            self.spect.dc_removal.averages_1.BIT_GROWTH := 10;
            self.spect.dc_removal.averages_1.start_counter.START_VALUE := Sfix(1, 1, 0);
            self.spect.windower.WINDOW_LENGTH := 512;
            self.spect.windower.WINDOW := (Sfix(0.080078125, 0, -10), Sfix(0.080078125, 0, -10), Sfix(0.080078125, 0, -10), Sfix(0.080078125, 0, -10), Sfix(0.080078125, 0, -10), Sfix(0.0810546875, 0, -10), Sfix(0.0810546875, 0, -10), Sfix(0.08203125, 0, -10), Sfix(0.08203125, 0, -10), Sfix(0.0830078125, 0, -10), Sfix(0.0830078125, 0, -10), Sfix(0.083984375, 0, -10), Sfix(0.0849609375, 0, -10), Sfix(0.0859375, 0, -10), Sfix(0.0869140625, 0, -10), Sfix(0.087890625, 0, -10), Sfix(0.0888671875, 0, -10), Sfix(0.08984375, 0, -10), Sfix(0.0908203125, 0, -10), Sfix(0.0927734375, 0, -10), Sfix(0.09375, 0, -10), Sfix(0.0947265625, 0, -10), Sfix(0.0966796875, 0, -10), Sfix(0.0986328125, 0, -10), Sfix(0.099609375, 0, -10), Sfix(0.1015625, 0, -10), Sfix(0.103515625, 0, -10), Sfix(0.10546875, 0, -10), Sfix(0.1064453125, 0, -10), Sfix(0.1083984375, 0, -10), Sfix(0.1103515625, 0, -10), Sfix(0.11328125, 0, -10), Sfix(0.115234375, 0, -10), Sfix(0.1171875, 0, -10), Sfix(0.119140625, 0, -10), Sfix(0.1220703125, 0, -10), Sfix(0.1240234375, 0, -10), Sfix(0.126953125, 0, -10), Sfix(0.12890625, 0, -10), Sfix(0.1318359375, 0, -10), Sfix(0.134765625, 0, -10), Sfix(0.13671875, 0, -10), Sfix(0.1396484375, 0, -10), Sfix(0.142578125, 0, -10), Sfix(0.1455078125, 0, -10), Sfix(0.1484375, 0, -10), Sfix(0.1513671875, 0, -10), Sfix(0.154296875, 0, -10), Sfix(0.1572265625, 0, -10), Sfix(0.1611328125, 0, -10), Sfix(0.1640625, 0, -10), Sfix(0.1669921875, 0, -10), Sfix(0.1708984375, 0, -10), Sfix(0.173828125, 0, -10), Sfix(0.177734375, 0, -10), Sfix(0.1806640625, 0, -10), Sfix(0.1845703125, 0, -10), Sfix(0.1884765625, 0, -10), Sfix(0.19140625, 0, -10), Sfix(0.1953125, 0, -10), Sfix(0.19921875, 0, -10), Sfix(0.203125, 0, -10), Sfix(0.20703125, 0, -10), Sfix(0.2109375, 0, -10), Sfix(0.21484375, 0, -10), Sfix(0.21875, 0, -10), Sfix(0.22265625, 0, -10), Sfix(0.2265625, 0, -10), Sfix(0.2314453125, 0, -10), Sfix(0.2353515625, 0, -10), Sfix(0.2392578125, 0, -10), Sfix(0.244140625, 0, -10), Sfix(0.248046875, 0, -10), Sfix(0.2529296875, 0, -10), Sfix(0.2568359375, 0, -10), Sfix(0.26171875, 0, -10), Sfix(0.265625, 0, -10), Sfix(0.2705078125, 0, -10), Sfix(0.275390625, 0, -10), Sfix(0.279296875, 0, -10), Sfix(0.2841796875, 0, -10), Sfix(0.2890625, 0, -10), Sfix(0.2939453125, 0, -10), Sfix(0.298828125, 0, -10), Sfix(0.3037109375, 0, -10), Sfix(0.30859375, 0, -10), Sfix(0.3134765625, 0, -10), Sfix(0.318359375, 0, -10), Sfix(0.3232421875, 0, -10), Sfix(0.328125, 0, -10), Sfix(0.3330078125, 0, -10), Sfix(0.337890625, 0, -10), Sfix(0.34375, 0, -10), Sfix(0.3486328125, 0, -10), Sfix(0.353515625, 0, -10), Sfix(0.3583984375, 0, -10), Sfix(0.3642578125, 0, -10), Sfix(0.369140625, 0, -10), Sfix(0.3740234375, 0, -10), Sfix(0.3798828125, 0, -10), Sfix(0.384765625, 0, -10), Sfix(0.390625, 0, -10), Sfix(0.3955078125, 0, -10), Sfix(0.4013671875, 0, -10), Sfix(0.40625, 0, -10), Sfix(0.412109375, 0, -10), Sfix(0.4169921875, 0, -10), Sfix(0.4228515625, 0, -10), Sfix(0.4287109375, 0, -10), Sfix(0.43359375, 0, -10), Sfix(0.439453125, 0, -10), Sfix(0.4443359375, 0, -10), Sfix(0.4501953125, 0, -10), Sfix(0.4560546875, 0, -10), Sfix(0.4609375, 0, -10), Sfix(0.466796875, 0, -10), Sfix(0.47265625, 0, -10), Sfix(0.478515625, 0, -10), Sfix(0.4833984375, 0, -10), Sfix(0.4892578125, 0, -10), Sfix(0.4951171875, 0, -10), Sfix(0.5009765625, 0, -10), Sfix(0.505859375, 0, -10), Sfix(0.51171875, 0, -10), Sfix(0.517578125, 0, -10), Sfix(0.5234375, 0, -10), Sfix(0.5283203125, 0, -10), Sfix(0.5341796875, 0, -10), Sfix(0.5400390625, 0, -10), Sfix(0.5458984375, 0, -10), Sfix(0.5517578125, 0, -10), Sfix(0.556640625, 0, -10), Sfix(0.5625, 0, -10), Sfix(0.568359375, 0, -10), Sfix(0.57421875, 0, -10), Sfix(0.5791015625, 0, -10), Sfix(0.5849609375, 0, -10), Sfix(0.5908203125, 0, -10), Sfix(0.5966796875, 0, -10), Sfix(0.6015625, 0, -10), Sfix(0.607421875, 0, -10), Sfix(0.61328125, 0, -10), Sfix(0.6181640625, 0, -10), Sfix(0.6240234375, 0, -10), Sfix(0.6298828125, 0, -10), Sfix(0.6357421875, 0, -10), Sfix(0.640625, 0, -10), Sfix(0.646484375, 0, -10), Sfix(0.6513671875, 0, -10), Sfix(0.6572265625, 0, -10), Sfix(0.6630859375, 0, -10), Sfix(0.66796875, 0, -10), Sfix(0.673828125, 0, -10), Sfix(0.6787109375, 0, -10), Sfix(0.6845703125, 0, -10), Sfix(0.689453125, 0, -10), Sfix(0.6953125, 0, -10), Sfix(0.7001953125, 0, -10), Sfix(0.705078125, 0, -10), Sfix(0.7109375, 0, -10), Sfix(0.7158203125, 0, -10), Sfix(0.7216796875, 0, -10), Sfix(0.7265625, 0, -10), Sfix(0.7314453125, 0, -10), Sfix(0.736328125, 0, -10), Sfix(0.7421875, 0, -10), Sfix(0.7470703125, 0, -10), Sfix(0.751953125, 0, -10), Sfix(0.7568359375, 0, -10), Sfix(0.76171875, 0, -10), Sfix(0.7666015625, 0, -10), Sfix(0.771484375, 0, -10), Sfix(0.7763671875, 0, -10), Sfix(0.78125, 0, -10), Sfix(0.7861328125, 0, -10), Sfix(0.791015625, 0, -10), Sfix(0.7958984375, 0, -10), Sfix(0.7998046875, 0, -10), Sfix(0.8046875, 0, -10), Sfix(0.8095703125, 0, -10), Sfix(0.814453125, 0, -10), Sfix(0.818359375, 0, -10), Sfix(0.8232421875, 0, -10), Sfix(0.8271484375, 0, -10), Sfix(0.83203125, 0, -10), Sfix(0.8359375, 0, -10), Sfix(0.8408203125, 0, -10), Sfix(0.8447265625, 0, -10), Sfix(0.8486328125, 0, -10), Sfix(0.853515625, 0, -10), Sfix(0.857421875, 0, -10), Sfix(0.861328125, 0, -10), Sfix(0.865234375, 0, -10), Sfix(0.869140625, 0, -10), Sfix(0.873046875, 0, -10), Sfix(0.876953125, 0, -10), Sfix(0.880859375, 0, -10), Sfix(0.884765625, 0, -10), Sfix(0.888671875, 0, -10), Sfix(0.8916015625, 0, -10), Sfix(0.8955078125, 0, -10), Sfix(0.8994140625, 0, -10), Sfix(0.90234375, 0, -10), Sfix(0.90625, 0, -10), Sfix(0.9091796875, 0, -10), Sfix(0.9130859375, 0, -10), Sfix(0.916015625, 0, -10), Sfix(0.9189453125, 0, -10), Sfix(0.9228515625, 0, -10), Sfix(0.92578125, 0, -10), Sfix(0.9287109375, 0, -10), Sfix(0.931640625, 0, -10), Sfix(0.9345703125, 0, -10), Sfix(0.9375, 0, -10), Sfix(0.9404296875, 0, -10), Sfix(0.943359375, 0, -10), Sfix(0.9453125, 0, -10), Sfix(0.9482421875, 0, -10), Sfix(0.951171875, 0, -10), Sfix(0.953125, 0, -10), Sfix(0.9560546875, 0, -10), Sfix(0.9580078125, 0, -10), Sfix(0.9609375, 0, -10), Sfix(0.962890625, 0, -10), Sfix(0.96484375, 0, -10), Sfix(0.966796875, 0, -10), Sfix(0.96875, 0, -10), Sfix(0.970703125, 0, -10), Sfix(0.97265625, 0, -10), Sfix(0.974609375, 0, -10), Sfix(0.9765625, 0, -10), Sfix(0.978515625, 0, -10), Sfix(0.98046875, 0, -10), Sfix(0.9814453125, 0, -10), Sfix(0.9833984375, 0, -10), Sfix(0.984375, 0, -10), Sfix(0.986328125, 0, -10), Sfix(0.9873046875, 0, -10), Sfix(0.9892578125, 0, -10), Sfix(0.990234375, 0, -10), Sfix(0.9912109375, 0, -10), Sfix(0.9921875, 0, -10), Sfix(0.9931640625, 0, -10), Sfix(0.994140625, 0, -10), Sfix(0.9951171875, 0, -10), Sfix(0.99609375, 0, -10), Sfix(0.99609375, 0, -10), Sfix(0.9970703125, 0, -10), Sfix(0.998046875, 0, -10), Sfix(0.998046875, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.9990234375, 0, -10), Sfix(0.998046875, 0, -10), Sfix(0.998046875, 0, -10), Sfix(0.9970703125, 0, -10), Sfix(0.99609375, 0, -10), Sfix(0.99609375, 0, -10), Sfix(0.9951171875, 0, -10), Sfix(0.994140625, 0, -10), Sfix(0.9931640625, 0, -10), Sfix(0.9921875, 0, -10), Sfix(0.9912109375, 0, -10), Sfix(0.990234375, 0, -10), Sfix(0.9892578125, 0, -10), Sfix(0.9873046875, 0, -10), Sfix(0.986328125, 0, -10), Sfix(0.984375, 0, -10), Sfix(0.9833984375, 0, -10), Sfix(0.9814453125, 0, -10), Sfix(0.98046875, 0, -10), Sfix(0.978515625, 0, -10), Sfix(0.9765625, 0, -10), Sfix(0.974609375, 0, -10), Sfix(0.97265625, 0, -10), Sfix(0.970703125, 0, -10), Sfix(0.96875, 0, -10), Sfix(0.966796875, 0, -10), Sfix(0.96484375, 0, -10), Sfix(0.962890625, 0, -10), Sfix(0.9609375, 0, -10), Sfix(0.9580078125, 0, -10), Sfix(0.9560546875, 0, -10), Sfix(0.953125, 0, -10), Sfix(0.951171875, 0, -10), Sfix(0.9482421875, 0, -10), Sfix(0.9453125, 0, -10), Sfix(0.943359375, 0, -10), Sfix(0.9404296875, 0, -10), Sfix(0.9375, 0, -10), Sfix(0.9345703125, 0, -10), Sfix(0.931640625, 0, -10), Sfix(0.9287109375, 0, -10), Sfix(0.92578125, 0, -10), Sfix(0.9228515625, 0, -10), Sfix(0.9189453125, 0, -10), Sfix(0.916015625, 0, -10), Sfix(0.9130859375, 0, -10), Sfix(0.9091796875, 0, -10), Sfix(0.90625, 0, -10), Sfix(0.90234375, 0, -10), Sfix(0.8994140625, 0, -10), Sfix(0.8955078125, 0, -10), Sfix(0.8916015625, 0, -10), Sfix(0.888671875, 0, -10), Sfix(0.884765625, 0, -10), Sfix(0.880859375, 0, -10), Sfix(0.876953125, 0, -10), Sfix(0.873046875, 0, -10), Sfix(0.869140625, 0, -10), Sfix(0.865234375, 0, -10), Sfix(0.861328125, 0, -10), Sfix(0.857421875, 0, -10), Sfix(0.853515625, 0, -10), Sfix(0.8486328125, 0, -10), Sfix(0.8447265625, 0, -10), Sfix(0.8408203125, 0, -10), Sfix(0.8359375, 0, -10), Sfix(0.83203125, 0, -10), Sfix(0.8271484375, 0, -10), Sfix(0.8232421875, 0, -10), Sfix(0.818359375, 0, -10), Sfix(0.814453125, 0, -10), Sfix(0.8095703125, 0, -10), Sfix(0.8046875, 0, -10), Sfix(0.7998046875, 0, -10), Sfix(0.7958984375, 0, -10), Sfix(0.791015625, 0, -10), Sfix(0.7861328125, 0, -10), Sfix(0.78125, 0, -10), Sfix(0.7763671875, 0, -10), Sfix(0.771484375, 0, -10), Sfix(0.7666015625, 0, -10), Sfix(0.76171875, 0, -10), Sfix(0.7568359375, 0, -10), Sfix(0.751953125, 0, -10), Sfix(0.7470703125, 0, -10), Sfix(0.7421875, 0, -10), Sfix(0.736328125, 0, -10), Sfix(0.7314453125, 0, -10), Sfix(0.7265625, 0, -10), Sfix(0.7216796875, 0, -10), Sfix(0.7158203125, 0, -10), Sfix(0.7109375, 0, -10), Sfix(0.705078125, 0, -10), Sfix(0.7001953125, 0, -10), Sfix(0.6953125, 0, -10), Sfix(0.689453125, 0, -10), Sfix(0.6845703125, 0, -10), Sfix(0.6787109375, 0, -10), Sfix(0.673828125, 0, -10), Sfix(0.66796875, 0, -10), Sfix(0.6630859375, 0, -10), Sfix(0.6572265625, 0, -10), Sfix(0.6513671875, 0, -10), Sfix(0.646484375, 0, -10), Sfix(0.640625, 0, -10), Sfix(0.6357421875, 0, -10), Sfix(0.6298828125, 0, -10), Sfix(0.6240234375, 0, -10), Sfix(0.6181640625, 0, -10), Sfix(0.61328125, 0, -10), Sfix(0.607421875, 0, -10), Sfix(0.6015625, 0, -10), Sfix(0.5966796875, 0, -10), Sfix(0.5908203125, 0, -10), Sfix(0.5849609375, 0, -10), Sfix(0.5791015625, 0, -10), Sfix(0.57421875, 0, -10), Sfix(0.568359375, 0, -10), Sfix(0.5625, 0, -10), Sfix(0.556640625, 0, -10), Sfix(0.5517578125, 0, -10), Sfix(0.5458984375, 0, -10), Sfix(0.5400390625, 0, -10), Sfix(0.5341796875, 0, -10), Sfix(0.5283203125, 0, -10), Sfix(0.5234375, 0, -10), Sfix(0.517578125, 0, -10), Sfix(0.51171875, 0, -10), Sfix(0.505859375, 0, -10), Sfix(0.5009765625, 0, -10), Sfix(0.4951171875, 0, -10), Sfix(0.4892578125, 0, -10), Sfix(0.4833984375, 0, -10), Sfix(0.478515625, 0, -10), Sfix(0.47265625, 0, -10), Sfix(0.466796875, 0, -10), Sfix(0.4609375, 0, -10), Sfix(0.4560546875, 0, -10), Sfix(0.4501953125, 0, -10), Sfix(0.4443359375, 0, -10), Sfix(0.439453125, 0, -10), Sfix(0.43359375, 0, -10), Sfix(0.4287109375, 0, -10), Sfix(0.4228515625, 0, -10), Sfix(0.4169921875, 0, -10), Sfix(0.412109375, 0, -10), Sfix(0.40625, 0, -10), Sfix(0.4013671875, 0, -10), Sfix(0.3955078125, 0, -10), Sfix(0.390625, 0, -10), Sfix(0.384765625, 0, -10), Sfix(0.3798828125, 0, -10), Sfix(0.3740234375, 0, -10), Sfix(0.369140625, 0, -10), Sfix(0.3642578125, 0, -10), Sfix(0.3583984375, 0, -10), Sfix(0.353515625, 0, -10), Sfix(0.3486328125, 0, -10), Sfix(0.34375, 0, -10), Sfix(0.337890625, 0, -10), Sfix(0.3330078125, 0, -10), Sfix(0.328125, 0, -10), Sfix(0.3232421875, 0, -10), Sfix(0.318359375, 0, -10), Sfix(0.3134765625, 0, -10), Sfix(0.30859375, 0, -10), Sfix(0.3037109375, 0, -10), Sfix(0.298828125, 0, -10), Sfix(0.2939453125, 0, -10), Sfix(0.2890625, 0, -10), Sfix(0.2841796875, 0, -10), Sfix(0.279296875, 0, -10), Sfix(0.275390625, 0, -10), Sfix(0.2705078125, 0, -10), Sfix(0.265625, 0, -10), Sfix(0.26171875, 0, -10), Sfix(0.2568359375, 0, -10), Sfix(0.2529296875, 0, -10), Sfix(0.248046875, 0, -10), Sfix(0.244140625, 0, -10), Sfix(0.2392578125, 0, -10), Sfix(0.2353515625, 0, -10), Sfix(0.2314453125, 0, -10), Sfix(0.2265625, 0, -10), Sfix(0.22265625, 0, -10), Sfix(0.21875, 0, -10), Sfix(0.21484375, 0, -10), Sfix(0.2109375, 0, -10), Sfix(0.20703125, 0, -10), Sfix(0.203125, 0, -10), Sfix(0.19921875, 0, -10), Sfix(0.1953125, 0, -10), Sfix(0.19140625, 0, -10), Sfix(0.1884765625, 0, -10), Sfix(0.1845703125, 0, -10), Sfix(0.1806640625, 0, -10), Sfix(0.177734375, 0, -10), Sfix(0.173828125, 0, -10), Sfix(0.1708984375, 0, -10), Sfix(0.1669921875, 0, -10), Sfix(0.1640625, 0, -10), Sfix(0.1611328125, 0, -10), Sfix(0.1572265625, 0, -10), Sfix(0.154296875, 0, -10), Sfix(0.1513671875, 0, -10), Sfix(0.1484375, 0, -10), Sfix(0.1455078125, 0, -10), Sfix(0.142578125, 0, -10), Sfix(0.1396484375, 0, -10), Sfix(0.13671875, 0, -10), Sfix(0.134765625, 0, -10), Sfix(0.1318359375, 0, -10), Sfix(0.12890625, 0, -10), Sfix(0.126953125, 0, -10), Sfix(0.1240234375, 0, -10), Sfix(0.1220703125, 0, -10), Sfix(0.119140625, 0, -10), Sfix(0.1171875, 0, -10), Sfix(0.115234375, 0, -10), Sfix(0.11328125, 0, -10), Sfix(0.1103515625, 0, -10), Sfix(0.1083984375, 0, -10), Sfix(0.1064453125, 0, -10), Sfix(0.10546875, 0, -10), Sfix(0.103515625, 0, -10), Sfix(0.1015625, 0, -10), Sfix(0.099609375, 0, -10), Sfix(0.0986328125, 0, -10), Sfix(0.0966796875, 0, -10), Sfix(0.0947265625, 0, -10), Sfix(0.09375, 0, -10), Sfix(0.0927734375, 0, -10), Sfix(0.0908203125, 0, -10), Sfix(0.08984375, 0, -10), Sfix(0.0888671875, 0, -10), Sfix(0.087890625, 0, -10), Sfix(0.0869140625, 0, -10), Sfix(0.0859375, 0, -10), Sfix(0.0849609375, 0, -10), Sfix(0.083984375, 0, -10), Sfix(0.0830078125, 0, -10), Sfix(0.0830078125, 0, -10), Sfix(0.08203125, 0, -10), Sfix(0.08203125, 0, -10), Sfix(0.0810546875, 0, -10), Sfix(0.0810546875, 0, -10), Sfix(0.080078125, 0, -10), Sfix(0.080078125, 0, -10), Sfix(0.080078125, 0, -10), Sfix(0.080078125, 0, -10));
            self.spect.fft.INVERSE := False;
            self.spect.fft.FFT_SIZE := 512;
            self.spect.fft.N_STAGES := 9;
            self.spect.fft.POST_GAIN_CONTROL := 0;
            self.spect.fft.stages_0.ALLOW_GAIN_CONTROL := True;
            self.spect.fft.stages_0.INVERSE := False;
            self.spect.fft.stages_0.GLOBAL_FFT_SIZE := 512;
            self.spect.fft.stages_0.STAGE_NR := 0;
            self.spect.fft.stages_0.IS_NATURAL_ORDER := True;
            self.spect.fft.stages_0.LOCAL_FFT_SIZE := 512;
            self.spect.fft.stages_0.INPUT_STRIDE := 256;
            self.spect.fft.stages_0.CONTROL_MASK := 255;
            self.spect.fft.stages_0.TWIDDLES := (Complex(0.9990234375, 0.0, 0, -10), Complex(0.9990234375, -0.0126953125, 0, -10), Complex(0.9990234375, -0.0244140625, 0, -10), Complex(0.9990234375, -0.037109375, 0, -10), Complex(0.9990234375, -0.048828125, 0, -10), Complex(0.998046875, -0.0615234375, 0, -10), Complex(0.9970703125, -0.0732421875, 0, -10), Complex(0.99609375, -0.0859375, 0, -10), Complex(0.9951171875, -0.09765625, 0, -10), Complex(0.994140625, -0.1103515625, 0, -10), Complex(0.9921875, -0.1220703125, 0, -10), Complex(0.9912109375, -0.134765625, 0, -10), Complex(0.9892578125, -0.146484375, 0, -10), Complex(0.9873046875, -0.1591796875, 0, -10), Complex(0.9853515625, -0.1708984375, 0, -10), Complex(0.9833984375, -0.1826171875, 0, -10), Complex(0.98046875, -0.1953125, 0, -10), Complex(0.978515625, -0.20703125, 0, -10), Complex(0.9755859375, -0.21875, 0, -10), Complex(0.97265625, -0.2314453125, 0, -10), Complex(0.9697265625, -0.2431640625, 0, -10), Complex(0.966796875, -0.2548828125, 0, -10), Complex(0.9638671875, -0.2666015625, 0, -10), Complex(0.9599609375, -0.2783203125, 0, -10), Complex(0.95703125, -0.2900390625, 0, -10), Complex(0.953125, -0.3017578125, 0, -10), Complex(0.94921875, -0.3134765625, 0, -10), Complex(0.9453125, -0.3251953125, 0, -10), Complex(0.94140625, -0.3369140625, 0, -10), Complex(0.9375, -0.3486328125, 0, -10), Complex(0.9326171875, -0.3603515625, 0, -10), Complex(0.9287109375, -0.37109375, 0, -10), Complex(0.923828125, -0.3828125, 0, -10), Complex(0.9189453125, -0.3935546875, 0, -10), Complex(0.9140625, -0.4052734375, 0, -10), Complex(0.9091796875, -0.416015625, 0, -10), Complex(0.904296875, -0.427734375, 0, -10), Complex(0.8984375, -0.4384765625, 0, -10), Complex(0.8935546875, -0.44921875, 0, -10), Complex(0.8876953125, -0.4609375, 0, -10), Complex(0.8818359375, -0.4716796875, 0, -10), Complex(0.8759765625, -0.482421875, 0, -10), Complex(0.8701171875, -0.4931640625, 0, -10), Complex(0.8642578125, -0.50390625, 0, -10), Complex(0.857421875, -0.513671875, 0, -10), Complex(0.8515625, -0.5244140625, 0, -10), Complex(0.8447265625, -0.53515625, 0, -10), Complex(0.837890625, -0.544921875, 0, -10), Complex(0.8310546875, -0.5556640625, 0, -10), Complex(0.82421875, -0.5654296875, 0, -10), Complex(0.8173828125, -0.576171875, 0, -10), Complex(0.810546875, -0.5859375, 0, -10), Complex(0.802734375, -0.595703125, 0, -10), Complex(0.7958984375, -0.60546875, 0, -10), Complex(0.7880859375, -0.615234375, 0, -10), Complex(0.7802734375, -0.625, 0, -10), Complex(0.7734375, -0.634765625, 0, -10), Complex(0.765625, -0.6435546875, 0, -10), Complex(0.7568359375, -0.6533203125, 0, -10), Complex(0.7490234375, -0.662109375, 0, -10), Complex(0.7412109375, -0.671875, 0, -10), Complex(0.732421875, -0.6806640625, 0, -10), Complex(0.724609375, -0.689453125, 0, -10), Complex(0.7158203125, -0.6982421875, 0, -10), Complex(0.70703125, -0.70703125, 0, -10), Complex(0.6982421875, -0.7158203125, 0, -10), Complex(0.689453125, -0.724609375, 0, -10), Complex(0.6806640625, -0.732421875, 0, -10), Complex(0.671875, -0.7412109375, 0, -10), Complex(0.662109375, -0.7490234375, 0, -10), Complex(0.6533203125, -0.7568359375, 0, -10), Complex(0.6435546875, -0.765625, 0, -10), Complex(0.634765625, -0.7734375, 0, -10), Complex(0.625, -0.7802734375, 0, -10), Complex(0.615234375, -0.7880859375, 0, -10), Complex(0.60546875, -0.7958984375, 0, -10), Complex(0.595703125, -0.802734375, 0, -10), Complex(0.5859375, -0.810546875, 0, -10), Complex(0.576171875, -0.8173828125, 0, -10), Complex(0.5654296875, -0.82421875, 0, -10), Complex(0.5556640625, -0.8310546875, 0, -10), Complex(0.544921875, -0.837890625, 0, -10), Complex(0.53515625, -0.8447265625, 0, -10), Complex(0.5244140625, -0.8515625, 0, -10), Complex(0.513671875, -0.857421875, 0, -10), Complex(0.50390625, -0.8642578125, 0, -10), Complex(0.4931640625, -0.8701171875, 0, -10), Complex(0.482421875, -0.8759765625, 0, -10), Complex(0.4716796875, -0.8818359375, 0, -10), Complex(0.4609375, -0.8876953125, 0, -10), Complex(0.44921875, -0.8935546875, 0, -10), Complex(0.4384765625, -0.8984375, 0, -10), Complex(0.427734375, -0.904296875, 0, -10), Complex(0.416015625, -0.9091796875, 0, -10), Complex(0.4052734375, -0.9140625, 0, -10), Complex(0.3935546875, -0.9189453125, 0, -10), Complex(0.3828125, -0.923828125, 0, -10), Complex(0.37109375, -0.9287109375, 0, -10), Complex(0.3603515625, -0.9326171875, 0, -10), Complex(0.3486328125, -0.9375, 0, -10), Complex(0.3369140625, -0.94140625, 0, -10), Complex(0.3251953125, -0.9453125, 0, -10), Complex(0.3134765625, -0.94921875, 0, -10), Complex(0.3017578125, -0.953125, 0, -10), Complex(0.2900390625, -0.95703125, 0, -10), Complex(0.2783203125, -0.9599609375, 0, -10), Complex(0.2666015625, -0.9638671875, 0, -10), Complex(0.2548828125, -0.966796875, 0, -10), Complex(0.2431640625, -0.9697265625, 0, -10), Complex(0.2314453125, -0.97265625, 0, -10), Complex(0.21875, -0.9755859375, 0, -10), Complex(0.20703125, -0.978515625, 0, -10), Complex(0.1953125, -0.98046875, 0, -10), Complex(0.1826171875, -0.9833984375, 0, -10), Complex(0.1708984375, -0.9853515625, 0, -10), Complex(0.1591796875, -0.9873046875, 0, -10), Complex(0.146484375, -0.9892578125, 0, -10), Complex(0.134765625, -0.9912109375, 0, -10), Complex(0.1220703125, -0.9921875, 0, -10), Complex(0.1103515625, -0.994140625, 0, -10), Complex(0.09765625, -0.9951171875, 0, -10), Complex(0.0859375, -0.99609375, 0, -10), Complex(0.0732421875, -0.9970703125, 0, -10), Complex(0.0615234375, -0.998046875, 0, -10), Complex(0.048828125, -0.9990234375, 0, -10), Complex(0.037109375, -0.9990234375, 0, -10), Complex(0.0244140625, -1.0, 0, -10), Complex(0.0126953125, -1.0, 0, -10), Complex(0.0, -1.0, 0, -10), Complex(-0.0126953125, -1.0, 0, -10), Complex(-0.0244140625, -1.0, 0, -10), Complex(-0.037109375, -0.9990234375, 0, -10), Complex(-0.048828125, -0.9990234375, 0, -10), Complex(-0.0615234375, -0.998046875, 0, -10), Complex(-0.0732421875, -0.9970703125, 0, -10), Complex(-0.0859375, -0.99609375, 0, -10), Complex(-0.09765625, -0.9951171875, 0, -10), Complex(-0.1103515625, -0.994140625, 0, -10), Complex(-0.1220703125, -0.9921875, 0, -10), Complex(-0.134765625, -0.9912109375, 0, -10), Complex(-0.146484375, -0.9892578125, 0, -10), Complex(-0.1591796875, -0.9873046875, 0, -10), Complex(-0.1708984375, -0.9853515625, 0, -10), Complex(-0.1826171875, -0.9833984375, 0, -10), Complex(-0.1953125, -0.98046875, 0, -10), Complex(-0.20703125, -0.978515625, 0, -10), Complex(-0.21875, -0.9755859375, 0, -10), Complex(-0.2314453125, -0.97265625, 0, -10), Complex(-0.2431640625, -0.9697265625, 0, -10), Complex(-0.2548828125, -0.966796875, 0, -10), Complex(-0.2666015625, -0.9638671875, 0, -10), Complex(-0.2783203125, -0.9599609375, 0, -10), Complex(-0.2900390625, -0.95703125, 0, -10), Complex(-0.3017578125, -0.953125, 0, -10), Complex(-0.3134765625, -0.94921875, 0, -10), Complex(-0.3251953125, -0.9453125, 0, -10), Complex(-0.3369140625, -0.94140625, 0, -10), Complex(-0.3486328125, -0.9375, 0, -10), Complex(-0.3603515625, -0.9326171875, 0, -10), Complex(-0.37109375, -0.9287109375, 0, -10), Complex(-0.3828125, -0.923828125, 0, -10), Complex(-0.3935546875, -0.9189453125, 0, -10), Complex(-0.4052734375, -0.9140625, 0, -10), Complex(-0.416015625, -0.9091796875, 0, -10), Complex(-0.427734375, -0.904296875, 0, -10), Complex(-0.4384765625, -0.8984375, 0, -10), Complex(-0.44921875, -0.8935546875, 0, -10), Complex(-0.4609375, -0.8876953125, 0, -10), Complex(-0.4716796875, -0.8818359375, 0, -10), Complex(-0.482421875, -0.8759765625, 0, -10), Complex(-0.4931640625, -0.8701171875, 0, -10), Complex(-0.50390625, -0.8642578125, 0, -10), Complex(-0.513671875, -0.857421875, 0, -10), Complex(-0.5244140625, -0.8515625, 0, -10), Complex(-0.53515625, -0.8447265625, 0, -10), Complex(-0.544921875, -0.837890625, 0, -10), Complex(-0.5556640625, -0.8310546875, 0, -10), Complex(-0.5654296875, -0.82421875, 0, -10), Complex(-0.576171875, -0.8173828125, 0, -10), Complex(-0.5859375, -0.810546875, 0, -10), Complex(-0.595703125, -0.802734375, 0, -10), Complex(-0.60546875, -0.7958984375, 0, -10), Complex(-0.615234375, -0.7880859375, 0, -10), Complex(-0.625, -0.7802734375, 0, -10), Complex(-0.634765625, -0.7734375, 0, -10), Complex(-0.6435546875, -0.765625, 0, -10), Complex(-0.6533203125, -0.7568359375, 0, -10), Complex(-0.662109375, -0.7490234375, 0, -10), Complex(-0.671875, -0.7412109375, 0, -10), Complex(-0.6806640625, -0.732421875, 0, -10), Complex(-0.689453125, -0.724609375, 0, -10), Complex(-0.6982421875, -0.7158203125, 0, -10), Complex(-0.70703125, -0.70703125, 0, -10), Complex(-0.7158203125, -0.6982421875, 0, -10), Complex(-0.724609375, -0.689453125, 0, -10), Complex(-0.732421875, -0.6806640625, 0, -10), Complex(-0.7412109375, -0.671875, 0, -10), Complex(-0.7490234375, -0.662109375, 0, -10), Complex(-0.7568359375, -0.6533203125, 0, -10), Complex(-0.765625, -0.6435546875, 0, -10), Complex(-0.7734375, -0.634765625, 0, -10), Complex(-0.7802734375, -0.625, 0, -10), Complex(-0.7880859375, -0.615234375, 0, -10), Complex(-0.7958984375, -0.60546875, 0, -10), Complex(-0.802734375, -0.595703125, 0, -10), Complex(-0.810546875, -0.5859375, 0, -10), Complex(-0.8173828125, -0.576171875, 0, -10), Complex(-0.82421875, -0.5654296875, 0, -10), Complex(-0.8310546875, -0.5556640625, 0, -10), Complex(-0.837890625, -0.544921875, 0, -10), Complex(-0.8447265625, -0.53515625, 0, -10), Complex(-0.8515625, -0.5244140625, 0, -10), Complex(-0.857421875, -0.513671875, 0, -10), Complex(-0.8642578125, -0.50390625, 0, -10), Complex(-0.8701171875, -0.4931640625, 0, -10), Complex(-0.8759765625, -0.482421875, 0, -10), Complex(-0.8818359375, -0.4716796875, 0, -10), Complex(-0.8876953125, -0.4609375, 0, -10), Complex(-0.8935546875, -0.44921875, 0, -10), Complex(-0.8984375, -0.4384765625, 0, -10), Complex(-0.904296875, -0.427734375, 0, -10), Complex(-0.9091796875, -0.416015625, 0, -10), Complex(-0.9140625, -0.4052734375, 0, -10), Complex(-0.9189453125, -0.3935546875, 0, -10), Complex(-0.923828125, -0.3828125, 0, -10), Complex(-0.9287109375, -0.37109375, 0, -10), Complex(-0.9326171875, -0.3603515625, 0, -10), Complex(-0.9375, -0.3486328125, 0, -10), Complex(-0.94140625, -0.3369140625, 0, -10), Complex(-0.9453125, -0.3251953125, 0, -10), Complex(-0.94921875, -0.3134765625, 0, -10), Complex(-0.953125, -0.3017578125, 0, -10), Complex(-0.95703125, -0.2900390625, 0, -10), Complex(-0.9599609375, -0.2783203125, 0, -10), Complex(-0.9638671875, -0.2666015625, 0, -10), Complex(-0.966796875, -0.2548828125, 0, -10), Complex(-0.9697265625, -0.2431640625, 0, -10), Complex(-0.97265625, -0.2314453125, 0, -10), Complex(-0.9755859375, -0.21875, 0, -10), Complex(-0.978515625, -0.20703125, 0, -10), Complex(-0.98046875, -0.1953125, 0, -10), Complex(-0.9833984375, -0.1826171875, 0, -10), Complex(-0.9853515625, -0.1708984375, 0, -10), Complex(-0.9873046875, -0.1591796875, 0, -10), Complex(-0.9892578125, -0.146484375, 0, -10), Complex(-0.9912109375, -0.134765625, 0, -10), Complex(-0.9921875, -0.1220703125, 0, -10), Complex(-0.994140625, -0.1103515625, 0, -10), Complex(-0.9951171875, -0.09765625, 0, -10), Complex(-0.99609375, -0.0859375, 0, -10), Complex(-0.9970703125, -0.0732421875, 0, -10), Complex(-0.998046875, -0.0615234375, 0, -10), Complex(-0.9990234375, -0.048828125, 0, -10), Complex(-0.9990234375, -0.037109375, 0, -10), Complex(-1.0, -0.0244140625, 0, -10), Complex(-1.0, -0.0126953125, 0, -10));
            self.spect.fft.stages_0.IS_TRIVIAL_MULTIPLIER := False;
            self.spect.fft.stages_0.start_counter.START_VALUE := Sfix(258, 9, 0);
            self.spect.fft.stages_1.ALLOW_GAIN_CONTROL := True;
            self.spect.fft.stages_1.INVERSE := False;
            self.spect.fft.stages_1.GLOBAL_FFT_SIZE := 512;
            self.spect.fft.stages_1.STAGE_NR := 1;
            self.spect.fft.stages_1.IS_NATURAL_ORDER := True;
            self.spect.fft.stages_1.LOCAL_FFT_SIZE := 256;
            self.spect.fft.stages_1.INPUT_STRIDE := 128;
            self.spect.fft.stages_1.CONTROL_MASK := 127;
            self.spect.fft.stages_1.TWIDDLES := (Complex(0.9990234375, 0.0, 0, -10), Complex(0.9990234375, -0.0244140625, 0, -10), Complex(0.9990234375, -0.048828125, 0, -10), Complex(0.9970703125, -0.0732421875, 0, -10), Complex(0.9951171875, -0.09765625, 0, -10), Complex(0.9921875, -0.1220703125, 0, -10), Complex(0.9892578125, -0.146484375, 0, -10), Complex(0.9853515625, -0.1708984375, 0, -10), Complex(0.98046875, -0.1953125, 0, -10), Complex(0.9755859375, -0.21875, 0, -10), Complex(0.9697265625, -0.2431640625, 0, -10), Complex(0.9638671875, -0.2666015625, 0, -10), Complex(0.95703125, -0.2900390625, 0, -10), Complex(0.94921875, -0.3134765625, 0, -10), Complex(0.94140625, -0.3369140625, 0, -10), Complex(0.9326171875, -0.3603515625, 0, -10), Complex(0.923828125, -0.3828125, 0, -10), Complex(0.9140625, -0.4052734375, 0, -10), Complex(0.904296875, -0.427734375, 0, -10), Complex(0.8935546875, -0.44921875, 0, -10), Complex(0.8818359375, -0.4716796875, 0, -10), Complex(0.8701171875, -0.4931640625, 0, -10), Complex(0.857421875, -0.513671875, 0, -10), Complex(0.8447265625, -0.53515625, 0, -10), Complex(0.8310546875, -0.5556640625, 0, -10), Complex(0.8173828125, -0.576171875, 0, -10), Complex(0.802734375, -0.595703125, 0, -10), Complex(0.7880859375, -0.615234375, 0, -10), Complex(0.7734375, -0.634765625, 0, -10), Complex(0.7568359375, -0.6533203125, 0, -10), Complex(0.7412109375, -0.671875, 0, -10), Complex(0.724609375, -0.689453125, 0, -10), Complex(0.70703125, -0.70703125, 0, -10), Complex(0.689453125, -0.724609375, 0, -10), Complex(0.671875, -0.7412109375, 0, -10), Complex(0.6533203125, -0.7568359375, 0, -10), Complex(0.634765625, -0.7734375, 0, -10), Complex(0.615234375, -0.7880859375, 0, -10), Complex(0.595703125, -0.802734375, 0, -10), Complex(0.576171875, -0.8173828125, 0, -10), Complex(0.5556640625, -0.8310546875, 0, -10), Complex(0.53515625, -0.8447265625, 0, -10), Complex(0.513671875, -0.857421875, 0, -10), Complex(0.4931640625, -0.8701171875, 0, -10), Complex(0.4716796875, -0.8818359375, 0, -10), Complex(0.44921875, -0.8935546875, 0, -10), Complex(0.427734375, -0.904296875, 0, -10), Complex(0.4052734375, -0.9140625, 0, -10), Complex(0.3828125, -0.923828125, 0, -10), Complex(0.3603515625, -0.9326171875, 0, -10), Complex(0.3369140625, -0.94140625, 0, -10), Complex(0.3134765625, -0.94921875, 0, -10), Complex(0.2900390625, -0.95703125, 0, -10), Complex(0.2666015625, -0.9638671875, 0, -10), Complex(0.2431640625, -0.9697265625, 0, -10), Complex(0.21875, -0.9755859375, 0, -10), Complex(0.1953125, -0.98046875, 0, -10), Complex(0.1708984375, -0.9853515625, 0, -10), Complex(0.146484375, -0.9892578125, 0, -10), Complex(0.1220703125, -0.9921875, 0, -10), Complex(0.09765625, -0.9951171875, 0, -10), Complex(0.0732421875, -0.9970703125, 0, -10), Complex(0.048828125, -0.9990234375, 0, -10), Complex(0.0244140625, -1.0, 0, -10), Complex(0.0, -1.0, 0, -10), Complex(-0.0244140625, -1.0, 0, -10), Complex(-0.048828125, -0.9990234375, 0, -10), Complex(-0.0732421875, -0.9970703125, 0, -10), Complex(-0.09765625, -0.9951171875, 0, -10), Complex(-0.1220703125, -0.9921875, 0, -10), Complex(-0.146484375, -0.9892578125, 0, -10), Complex(-0.1708984375, -0.9853515625, 0, -10), Complex(-0.1953125, -0.98046875, 0, -10), Complex(-0.21875, -0.9755859375, 0, -10), Complex(-0.2431640625, -0.9697265625, 0, -10), Complex(-0.2666015625, -0.9638671875, 0, -10), Complex(-0.2900390625, -0.95703125, 0, -10), Complex(-0.3134765625, -0.94921875, 0, -10), Complex(-0.3369140625, -0.94140625, 0, -10), Complex(-0.3603515625, -0.9326171875, 0, -10), Complex(-0.3828125, -0.923828125, 0, -10), Complex(-0.4052734375, -0.9140625, 0, -10), Complex(-0.427734375, -0.904296875, 0, -10), Complex(-0.44921875, -0.8935546875, 0, -10), Complex(-0.4716796875, -0.8818359375, 0, -10), Complex(-0.4931640625, -0.8701171875, 0, -10), Complex(-0.513671875, -0.857421875, 0, -10), Complex(-0.53515625, -0.8447265625, 0, -10), Complex(-0.5556640625, -0.8310546875, 0, -10), Complex(-0.576171875, -0.8173828125, 0, -10), Complex(-0.595703125, -0.802734375, 0, -10), Complex(-0.615234375, -0.7880859375, 0, -10), Complex(-0.634765625, -0.7734375, 0, -10), Complex(-0.6533203125, -0.7568359375, 0, -10), Complex(-0.671875, -0.7412109375, 0, -10), Complex(-0.689453125, -0.724609375, 0, -10), Complex(-0.70703125, -0.70703125, 0, -10), Complex(-0.724609375, -0.689453125, 0, -10), Complex(-0.7412109375, -0.671875, 0, -10), Complex(-0.7568359375, -0.6533203125, 0, -10), Complex(-0.7734375, -0.634765625, 0, -10), Complex(-0.7880859375, -0.615234375, 0, -10), Complex(-0.802734375, -0.595703125, 0, -10), Complex(-0.8173828125, -0.576171875, 0, -10), Complex(-0.8310546875, -0.5556640625, 0, -10), Complex(-0.8447265625, -0.53515625, 0, -10), Complex(-0.857421875, -0.513671875, 0, -10), Complex(-0.8701171875, -0.4931640625, 0, -10), Complex(-0.8818359375, -0.4716796875, 0, -10), Complex(-0.8935546875, -0.44921875, 0, -10), Complex(-0.904296875, -0.427734375, 0, -10), Complex(-0.9140625, -0.4052734375, 0, -10), Complex(-0.923828125, -0.3828125, 0, -10), Complex(-0.9326171875, -0.3603515625, 0, -10), Complex(-0.94140625, -0.3369140625, 0, -10), Complex(-0.94921875, -0.3134765625, 0, -10), Complex(-0.95703125, -0.2900390625, 0, -10), Complex(-0.9638671875, -0.2666015625, 0, -10), Complex(-0.9697265625, -0.2431640625, 0, -10), Complex(-0.9755859375, -0.21875, 0, -10), Complex(-0.98046875, -0.1953125, 0, -10), Complex(-0.9853515625, -0.1708984375, 0, -10), Complex(-0.9892578125, -0.146484375, 0, -10), Complex(-0.9921875, -0.1220703125, 0, -10), Complex(-0.9951171875, -0.09765625, 0, -10), Complex(-0.9970703125, -0.0732421875, 0, -10), Complex(-0.9990234375, -0.048828125, 0, -10), Complex(-1.0, -0.0244140625, 0, -10));
            self.spect.fft.stages_1.IS_TRIVIAL_MULTIPLIER := False;
            self.spect.fft.stages_1.start_counter.START_VALUE := Sfix(130, 8, 0);
            self.spect.fft.stages_2.ALLOW_GAIN_CONTROL := True;
            self.spect.fft.stages_2.INVERSE := False;
            self.spect.fft.stages_2.GLOBAL_FFT_SIZE := 512;
            self.spect.fft.stages_2.STAGE_NR := 2;
            self.spect.fft.stages_2.IS_NATURAL_ORDER := True;
            self.spect.fft.stages_2.LOCAL_FFT_SIZE := 128;
            self.spect.fft.stages_2.INPUT_STRIDE := 64;
            self.spect.fft.stages_2.CONTROL_MASK := 63;
            self.spect.fft.stages_2.TWIDDLES := (Complex(0.9990234375, 0.0, 0, -10), Complex(0.9990234375, -0.048828125, 0, -10), Complex(0.9951171875, -0.09765625, 0, -10), Complex(0.9892578125, -0.146484375, 0, -10), Complex(0.98046875, -0.1953125, 0, -10), Complex(0.9697265625, -0.2431640625, 0, -10), Complex(0.95703125, -0.2900390625, 0, -10), Complex(0.94140625, -0.3369140625, 0, -10), Complex(0.923828125, -0.3828125, 0, -10), Complex(0.904296875, -0.427734375, 0, -10), Complex(0.8818359375, -0.4716796875, 0, -10), Complex(0.857421875, -0.513671875, 0, -10), Complex(0.8310546875, -0.5556640625, 0, -10), Complex(0.802734375, -0.595703125, 0, -10), Complex(0.7734375, -0.634765625, 0, -10), Complex(0.7412109375, -0.671875, 0, -10), Complex(0.70703125, -0.70703125, 0, -10), Complex(0.671875, -0.7412109375, 0, -10), Complex(0.634765625, -0.7734375, 0, -10), Complex(0.595703125, -0.802734375, 0, -10), Complex(0.5556640625, -0.8310546875, 0, -10), Complex(0.513671875, -0.857421875, 0, -10), Complex(0.4716796875, -0.8818359375, 0, -10), Complex(0.427734375, -0.904296875, 0, -10), Complex(0.3828125, -0.923828125, 0, -10), Complex(0.3369140625, -0.94140625, 0, -10), Complex(0.2900390625, -0.95703125, 0, -10), Complex(0.2431640625, -0.9697265625, 0, -10), Complex(0.1953125, -0.98046875, 0, -10), Complex(0.146484375, -0.9892578125, 0, -10), Complex(0.09765625, -0.9951171875, 0, -10), Complex(0.048828125, -0.9990234375, 0, -10), Complex(0.0, -1.0, 0, -10), Complex(-0.048828125, -0.9990234375, 0, -10), Complex(-0.09765625, -0.9951171875, 0, -10), Complex(-0.146484375, -0.9892578125, 0, -10), Complex(-0.1953125, -0.98046875, 0, -10), Complex(-0.2431640625, -0.9697265625, 0, -10), Complex(-0.2900390625, -0.95703125, 0, -10), Complex(-0.3369140625, -0.94140625, 0, -10), Complex(-0.3828125, -0.923828125, 0, -10), Complex(-0.427734375, -0.904296875, 0, -10), Complex(-0.4716796875, -0.8818359375, 0, -10), Complex(-0.513671875, -0.857421875, 0, -10), Complex(-0.5556640625, -0.8310546875, 0, -10), Complex(-0.595703125, -0.802734375, 0, -10), Complex(-0.634765625, -0.7734375, 0, -10), Complex(-0.671875, -0.7412109375, 0, -10), Complex(-0.70703125, -0.70703125, 0, -10), Complex(-0.7412109375, -0.671875, 0, -10), Complex(-0.7734375, -0.634765625, 0, -10), Complex(-0.802734375, -0.595703125, 0, -10), Complex(-0.8310546875, -0.5556640625, 0, -10), Complex(-0.857421875, -0.513671875, 0, -10), Complex(-0.8818359375, -0.4716796875, 0, -10), Complex(-0.904296875, -0.427734375, 0, -10), Complex(-0.923828125, -0.3828125, 0, -10), Complex(-0.94140625, -0.3369140625, 0, -10), Complex(-0.95703125, -0.2900390625, 0, -10), Complex(-0.9697265625, -0.2431640625, 0, -10), Complex(-0.98046875, -0.1953125, 0, -10), Complex(-0.9892578125, -0.146484375, 0, -10), Complex(-0.9951171875, -0.09765625, 0, -10), Complex(-0.9990234375, -0.048828125, 0, -10));
            self.spect.fft.stages_2.IS_TRIVIAL_MULTIPLIER := False;
            self.spect.fft.stages_2.start_counter.START_VALUE := Sfix(66, 7, 0);
            self.spect.fft.stages_3.ALLOW_GAIN_CONTROL := True;
            self.spect.fft.stages_3.INVERSE := False;
            self.spect.fft.stages_3.GLOBAL_FFT_SIZE := 512;
            self.spect.fft.stages_3.STAGE_NR := 3;
            self.spect.fft.stages_3.IS_NATURAL_ORDER := True;
            self.spect.fft.stages_3.LOCAL_FFT_SIZE := 64;
            self.spect.fft.stages_3.INPUT_STRIDE := 32;
            self.spect.fft.stages_3.CONTROL_MASK := 31;
            self.spect.fft.stages_3.TWIDDLES := (Complex(0.9990234375, 0.0, 0, -10), Complex(0.9951171875, -0.09765625, 0, -10), Complex(0.98046875, -0.1953125, 0, -10), Complex(0.95703125, -0.2900390625, 0, -10), Complex(0.923828125, -0.3828125, 0, -10), Complex(0.8818359375, -0.4716796875, 0, -10), Complex(0.8310546875, -0.5556640625, 0, -10), Complex(0.7734375, -0.634765625, 0, -10), Complex(0.70703125, -0.70703125, 0, -10), Complex(0.634765625, -0.7734375, 0, -10), Complex(0.5556640625, -0.8310546875, 0, -10), Complex(0.4716796875, -0.8818359375, 0, -10), Complex(0.3828125, -0.923828125, 0, -10), Complex(0.2900390625, -0.95703125, 0, -10), Complex(0.1953125, -0.98046875, 0, -10), Complex(0.09765625, -0.9951171875, 0, -10), Complex(0.0, -1.0, 0, -10), Complex(-0.09765625, -0.9951171875, 0, -10), Complex(-0.1953125, -0.98046875, 0, -10), Complex(-0.2900390625, -0.95703125, 0, -10), Complex(-0.3828125, -0.923828125, 0, -10), Complex(-0.4716796875, -0.8818359375, 0, -10), Complex(-0.5556640625, -0.8310546875, 0, -10), Complex(-0.634765625, -0.7734375, 0, -10), Complex(-0.70703125, -0.70703125, 0, -10), Complex(-0.7734375, -0.634765625, 0, -10), Complex(-0.8310546875, -0.5556640625, 0, -10), Complex(-0.8818359375, -0.4716796875, 0, -10), Complex(-0.923828125, -0.3828125, 0, -10), Complex(-0.95703125, -0.2900390625, 0, -10), Complex(-0.98046875, -0.1953125, 0, -10), Complex(-0.9951171875, -0.09765625, 0, -10));
            self.spect.fft.stages_3.IS_TRIVIAL_MULTIPLIER := False;
            self.spect.fft.stages_3.start_counter.START_VALUE := Sfix(34, 6, 0);
            self.spect.fft.stages_4.ALLOW_GAIN_CONTROL := True;
            self.spect.fft.stages_4.INVERSE := False;
            self.spect.fft.stages_4.GLOBAL_FFT_SIZE := 512;
            self.spect.fft.stages_4.STAGE_NR := 4;
            self.spect.fft.stages_4.IS_NATURAL_ORDER := True;
            self.spect.fft.stages_4.LOCAL_FFT_SIZE := 32;
            self.spect.fft.stages_4.INPUT_STRIDE := 16;
            self.spect.fft.stages_4.CONTROL_MASK := 15;
            self.spect.fft.stages_4.TWIDDLES := (Complex(0.9990234375, 0.0, 0, -10), Complex(0.98046875, -0.1953125, 0, -10), Complex(0.923828125, -0.3828125, 0, -10), Complex(0.8310546875, -0.5556640625, 0, -10), Complex(0.70703125, -0.70703125, 0, -10), Complex(0.5556640625, -0.8310546875, 0, -10), Complex(0.3828125, -0.923828125, 0, -10), Complex(0.1953125, -0.98046875, 0, -10), Complex(0.0, -1.0, 0, -10), Complex(-0.1953125, -0.98046875, 0, -10), Complex(-0.3828125, -0.923828125, 0, -10), Complex(-0.5556640625, -0.8310546875, 0, -10), Complex(-0.70703125, -0.70703125, 0, -10), Complex(-0.8310546875, -0.5556640625, 0, -10), Complex(-0.923828125, -0.3828125, 0, -10), Complex(-0.98046875, -0.1953125, 0, -10));
            self.spect.fft.stages_4.IS_TRIVIAL_MULTIPLIER := False;
            self.spect.fft.stages_4.start_counter.START_VALUE := Sfix(18, 5, 0);
            self.spect.fft.stages_5.ALLOW_GAIN_CONTROL := True;
            self.spect.fft.stages_5.INVERSE := False;
            self.spect.fft.stages_5.GLOBAL_FFT_SIZE := 512;
            self.spect.fft.stages_5.STAGE_NR := 5;
            self.spect.fft.stages_5.IS_NATURAL_ORDER := True;
            self.spect.fft.stages_5.LOCAL_FFT_SIZE := 16;
            self.spect.fft.stages_5.INPUT_STRIDE := 8;
            self.spect.fft.stages_5.CONTROL_MASK := 7;
            self.spect.fft.stages_5.TWIDDLES := (Complex(0.9990234375, 0.0, 0, -10), Complex(0.923828125, -0.3828125, 0, -10), Complex(0.70703125, -0.70703125, 0, -10), Complex(0.3828125, -0.923828125, 0, -10), Complex(0.0, -1.0, 0, -10), Complex(-0.3828125, -0.923828125, 0, -10), Complex(-0.70703125, -0.70703125, 0, -10), Complex(-0.923828125, -0.3828125, 0, -10));
            self.spect.fft.stages_5.IS_TRIVIAL_MULTIPLIER := False;
            self.spect.fft.stages_5.start_counter.START_VALUE := Sfix(10, 4, 0);
            self.spect.fft.stages_6.ALLOW_GAIN_CONTROL := True;
            self.spect.fft.stages_6.INVERSE := False;
            self.spect.fft.stages_6.GLOBAL_FFT_SIZE := 512;
            self.spect.fft.stages_6.STAGE_NR := 6;
            self.spect.fft.stages_6.IS_NATURAL_ORDER := True;
            self.spect.fft.stages_6.LOCAL_FFT_SIZE := 8;
            self.spect.fft.stages_6.INPUT_STRIDE := 4;
            self.spect.fft.stages_6.CONTROL_MASK := 3;
            self.spect.fft.stages_6.TWIDDLES := (Complex(0.9990234375, 0.0, 0, -10), Complex(0.70703125, -0.70703125, 0, -10), Complex(0.0, -1.0, 0, -10), Complex(-0.70703125, -0.70703125, 0, -10));
            self.spect.fft.stages_6.IS_TRIVIAL_MULTIPLIER := False;
            self.spect.fft.stages_6.start_counter.START_VALUE := Sfix(6, 3, 0);
            self.spect.fft.stages_7.ALLOW_GAIN_CONTROL := True;
            self.spect.fft.stages_7.INVERSE := False;
            self.spect.fft.stages_7.GLOBAL_FFT_SIZE := 512;
            self.spect.fft.stages_7.STAGE_NR := 7;
            self.spect.fft.stages_7.IS_NATURAL_ORDER := True;
            self.spect.fft.stages_7.LOCAL_FFT_SIZE := 4;
            self.spect.fft.stages_7.INPUT_STRIDE := 2;
            self.spect.fft.stages_7.CONTROL_MASK := 1;
            self.spect.fft.stages_7.TWIDDLES := (Complex(0.9990234375, 0.0, 0, -10), Complex(0.0, -1.0, 0, -10));
            self.spect.fft.stages_7.IS_TRIVIAL_MULTIPLIER := False;
            self.spect.fft.stages_7.start_counter.START_VALUE := Sfix(4, 3, 0);
            self.spect.fft.stages_8.ALLOW_GAIN_CONTROL := True;
            self.spect.fft.stages_8.INVERSE := False;
            self.spect.fft.stages_8.GLOBAL_FFT_SIZE := 512;
            self.spect.fft.stages_8.STAGE_NR := 8;
            self.spect.fft.stages_8.IS_NATURAL_ORDER := True;
            self.spect.fft.stages_8.LOCAL_FFT_SIZE := 2;
            self.spect.fft.stages_8.INPUT_STRIDE := 1;
            self.spect.fft.stages_8.CONTROL_MASK := 0;
            self.spect.fft.stages_8.TWIDDLES(0) := (Complex(0.9990234375, 0.0, 0, -10));
            self.spect.fft.stages_8.IS_TRIVIAL_MULTIPLIER := True;
            self.spect.fft.stages_8.start_counter.START_VALUE := Sfix(3, 2, 0);
            self.spect.dec.AVG_FREQ_AXIS := 1;
            self.spect.dec.AVG_TIME_AXIS := 256;
            self.spect.dec.ACCUMULATION_BITS := 8;
            self.spect.dec.FFT_SIZE := 512;
            self.spect.dec.LUT := (256, 0, 384, 128, 320, 64, 448, 192, 288, 32, 416, 160, 352, 96, 480, 224, 272, 16, 400, 144, 336, 80, 464, 208, 304, 48, 432, 176, 368, 112, 496, 240, 264, 8, 392, 136, 328, 72, 456, 200, 296, 40, 424, 168, 360, 104, 488, 232, 280, 24, 408, 152, 344, 88, 472, 216, 312, 56, 440, 184, 376, 120, 504, 248, 260, 4, 388, 132, 324, 68, 452, 196, 292, 36, 420, 164, 356, 100, 484, 228, 276, 20, 404, 148, 340, 84, 468, 212, 308, 52, 436, 180, 372, 116, 500, 244, 268, 12, 396, 140, 332, 76, 460, 204, 300, 44, 428, 172, 364, 108, 492, 236, 284, 28, 412, 156, 348, 92, 476, 220, 316, 60, 444, 188, 380, 124, 508, 252, 258, 2, 386, 130, 322, 66, 450, 194, 290, 34, 418, 162, 354, 98, 482, 226, 274, 18, 402, 146, 338, 82, 466, 210, 306, 50, 434, 178, 370, 114, 498, 242, 266, 10, 394, 138, 330, 74, 458, 202, 298, 42, 426, 170, 362, 106, 490, 234, 282, 26, 410, 154, 346, 90, 474, 218, 314, 58, 442, 186, 378, 122, 506, 250, 262, 6, 390, 134, 326, 70, 454, 198, 294, 38, 422, 166, 358, 102, 486, 230, 278, 22, 406, 150, 342, 86, 470, 214, 310, 54, 438, 182, 374, 118, 502, 246, 270, 14, 398, 142, 334, 78, 462, 206, 302, 46, 430, 174, 366, 110, 494, 238, 286, 30, 414, 158, 350, 94, 478, 222, 318, 62, 446, 190, 382, 126, 510, 254, 257, 1, 385, 129, 321, 65, 449, 193, 289, 33, 417, 161, 353, 97, 481, 225, 273, 17, 401, 145, 337, 81, 465, 209, 305, 49, 433, 177, 369, 113, 497, 241, 265, 9, 393, 137, 329, 73, 457, 201, 297, 41, 425, 169, 361, 105, 489, 233, 281, 25, 409, 153, 345, 89, 473, 217, 313, 57, 441, 185, 377, 121, 505, 249, 261, 5, 389, 133, 325, 69, 453, 197, 293, 37, 421, 165, 357, 101, 485, 229, 277, 21, 405, 149, 341, 85, 469, 213, 309, 53, 437, 181, 373, 117, 501, 245, 269, 13, 397, 141, 333, 77, 461, 205, 301, 45, 429, 173, 365, 109, 493, 237, 285, 29, 413, 157, 349, 93, 477, 221, 317, 61, 445, 189, 381, 125, 509, 253, 259, 3, 387, 131, 323, 67, 451, 195, 291, 35, 419, 163, 355, 99, 483, 227, 275, 19, 403, 147, 339, 83, 467, 211, 307, 51, 435, 179, 371, 115, 499, 243, 267, 11, 395, 139, 331, 75, 459, 203, 299, 43, 427, 171, 363, 107, 491, 235, 283, 27, 411, 155, 347, 91, 475, 219, 315, 59, 443, 187, 379, 123, 507, 251, 263, 7, 391, 135, 327, 71, 455, 199, 295, 39, 423, 167, 359, 103, 487, 231, 279, 23, 407, 151, 343, 87, 471, 215, 311, 55, 439, 183, 375, 119, 503, 247, 271, 15, 399, 143, 335, 79, 463, 207, 303, 47, 431, 175, 367, 111, 495, 239, 287, 31, 415, 159, 351, 95, 479, 223, 319, 63, 447, 191, 383, 127, 511, 255);
            self.spect.dec.final_counter.START_VALUE := Sfix(513, 10, 0);
            self.spect.dec.start_counter.START_VALUE := Sfix(513, 10, 0);
          return self;
    end function;

    signal self: SpectrogramLimeSDR_45.self_t := init_regs;
    constant self_const: SpectrogramLimeSDR_45.self_t_const := init_constants;
begin
    process(clk, rst_n)
        variable self_next: SpectrogramLimeSDR_45.self_t;
        -- input variables
        variable var_in0: DataValid_0.self_t;

        --output variables
        variable var_out0: DataValid_1.self_t;

    begin
        self_next := self;

        --convert slv to normal types
        var_in0.data := Complex(in0(23 downto 0), 0, -11);
        var_in0.valid := logic_to_bool(in0(24 downto 24));

        --call the main entry
        SpectrogramLimeSDR_45.main(self, self_next, self_const, var_in0, ret_0=>var_out0);

        --convert normal types to slv
        out0(31 downto 0) <= to_slv(var_out0.data);
        out0(32 downto 32) <= bool_to_logic(var_out0.valid);


        if (rst_n = '0') then
            self <= init_regs;
            self.spect.dec.ram(0) <= self.spect.dec.ram(0);
            self.spect.dec.ram(1) <= self.spect.dec.ram(1);
        elsif rising_edge(clk) then
            -- look #153 if you want enable
            --if enable = '1' then
                self <= self_next;

            	self.spect.dec.ram(0).data(self_next.spect.dec.ram(0).write_address) <= self_next.spect.dec.ram(0).write_value;
            	self.spect.dec.ram(0).read_reg <= self.spect.dec.ram(0).data(self_next.spect.dec.ram(0).read_address);

            	self.spect.dec.ram(1).data(self_next.spect.dec.ram(1).write_address) <= self_next.spect.dec.ram(1).write_value;
            	self.spect.dec.ram(1).read_reg <= self.spect.dec.ram(1).data(self_next.spect.dec.ram(1).read_address);
            --end if;
        end if;

    end process;
end architecture;