-- generated by pyha 0.0.10
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_float_types.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.complex_pkg.all;
    use work.PyhaUtil.all;
    use work.Typedefs.all;
    use work.all;
    use work.DataValid_39.all;
    use work.DataValid_38.all;
    use work.DataValid_37.all;
    use work.DataValid_0.all;
    use work.DataValid_17.all;
    use work.DataValid_36.all;
    use work.ShiftRegister_16.all;
    use work.DownCounter_0.all;
    use work.MovingAverage_2.all;
    use work.ShiftRegister_0.all;
    use work.MovingAverage_0.all;
    use work.ShiftRegister_18.all;
    use work.DCRemoval_1.all;
    use work.Windower_0.all;
    use work.ShiftRegister_15.all;
    use work.DownCounter_14.all;
    use work.StageR2SDF_12.all;
    use work.ShiftRegister_3.all;
    use work.DownCounter_2.all;
    use work.StageR2SDF_0.all;
    use work.ShiftRegister_4.all;
    use work.DownCounter_3.all;
    use work.StageR2SDF_1.all;
    use work.DownCounter_4.all;
    use work.StageR2SDF_2.all;
    use work.ShiftRegister_6.all;
    use work.DownCounter_5.all;
    use work.StageR2SDF_3.all;
    use work.ShiftRegister_7.all;
    use work.DownCounter_6.all;
    use work.StageR2SDF_4.all;
    use work.ShiftRegister_8.all;
    use work.DownCounter_7.all;
    use work.StageR2SDF_5.all;
    use work.ShiftRegister_9.all;
    use work.DownCounter_8.all;
    use work.StageR2SDF_6.all;
    use work.ShiftRegister_10.all;
    use work.DownCounter_9.all;
    use work.StageR2SDF_7.all;
    use work.ShiftRegister_11.all;
    use work.DownCounter_10.all;
    use work.StageR2SDF_8.all;
    use work.ShiftRegister_12.all;
    use work.DownCounter_11.all;
    use work.StageR2SDF_9.all;
    use work.ShiftRegister_13.all;
    use work.DownCounter_12.all;
    use work.StageR2SDF_10.all;
    use work.ShiftRegister_14.all;
    use work.StageR2SDF_11.all;
    use work.R2SDF_0.all;
    use work.FFTPower_0.all;
    use work.RAM_0.all;
    use work.DownCounter_31.all;
    use work.BitreversalFFTshiftAVGPool_0.all;
    use work.Spectrogram_0.all;


package SpectrogramLimeSDR_0 is
    type self_t is record
        spect: Spectrogram_0.self_t;
        \out\: DataValid_38.self_t;
    end record;
    type SpectrogramLimeSDR_0_self_t_list_t is array (natural range <>) of SpectrogramLimeSDR_0.self_t;

    type self_t_const is record
        spect: Spectrogram_0.self_t_const;
        \out\: DataValid_38.self_t_const;
    end record;
    type SpectrogramLimeSDR_0_self_t_const_list_t_const is array (natural range <>) of SpectrogramLimeSDR_0.self_t_const;

    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; inp: DataValid_39.self_t; ret_0:out DataValid_38.self_t);
    function SpectrogramLimeSDR(spect: Spectrogram_0.self_t; \out\: DataValid_38.self_t) return self_t;
end package;

package body SpectrogramLimeSDR_0 is
    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; inp: DataValid_39.self_t; ret_0:out DataValid_38.self_t) is

        variable spect: DataValid_37.self_t;
        variable pyha_ret_0: DataValid_37.self_t;
    begin

        Spectrogram_0.main(self.spect, self_next.spect, self_const.spect, inp, pyha_ret_0);
        spect := pyha_ret_0;

        self_next.\out\.data := resize(spect.data, -5, -36, fixed_saturate, fixed_round);
        self_next.\out\.valid := spect.valid;

        ret_0 := self.\out\;
        return;
    end procedure;

    function SpectrogramLimeSDR(spect: Spectrogram_0.self_t; \out\: DataValid_38.self_t) return self_t is
        -- constructor
        variable self: self_t;
    begin
        self.spect := spect;
        self.\out\ := \out\;
        return self;
    end function;
end package body;
