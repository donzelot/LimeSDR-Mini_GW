-- generated by pyha 0.0.11
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_float_types.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.complex_pkg.all;
    use work.PyhaUtil.all;
    use work.Typedefs.all;
    use work.all;
    use work.DataValid_0.all;
    use work.DataValid_1.all;
    use work.DataValid_2.all;
    use work.DataValid_3.all;
    use work.DataValid_4.all;
    use work.ShiftRegister_5.all;
    use work.DownCounter_6.all;
    use work.MovingAverage_7.all;
    use work.ShiftRegister_8.all;
    use work.MovingAverage_9.all;
    use work.ShiftRegister_10.all;
    use work.DCRemoval_11.all;
    use work.Windower_12.all;
    use work.ShiftRegister_13.all;
    use work.DownCounter_14.all;
    use work.StageR2SDF_15.all;
    use work.ShiftRegister_16.all;
    use work.DownCounter_17.all;
    use work.StageR2SDF_18.all;
    use work.ShiftRegister_19.all;
    use work.DownCounter_20.all;
    use work.StageR2SDF_21.all;
    use work.ShiftRegister_22.all;
    use work.DownCounter_23.all;
    use work.StageR2SDF_24.all;
    use work.ShiftRegister_25.all;
    use work.DownCounter_26.all;
    use work.StageR2SDF_27.all;
    use work.ShiftRegister_28.all;
    use work.DownCounter_29.all;
    use work.StageR2SDF_30.all;
    use work.ShiftRegister_31.all;
    use work.DownCounter_32.all;
    use work.StageR2SDF_33.all;
    use work.ShiftRegister_34.all;
    use work.DownCounter_35.all;
    use work.StageR2SDF_36.all;
    use work.ShiftRegister_37.all;
    use work.StageR2SDF_38.all;
    use work.R2SDF_39.all;
    use work.FFTPower_40.all;
    use work.RAM_41.all;
    use work.DownCounter_42.all;
    use work.BitreversalFFTshiftAVGPool_43.all;
    use work.Spectrogram_44.all;

-- Spectrogram accelerator for LimeSDR Mini.
package SpectrogramLimeSDR_45 is
    type self_t is record
        spect: Spectrogram_44.self_t;
        output: DataValid_1.self_t;
    end record;
    type SpectrogramLimeSDR_45_self_t_list_t is array (natural range <>) of SpectrogramLimeSDR_45.self_t;

    type self_t_const is record
        spect: Spectrogram_44.self_t_const;
        output: DataValid_1.self_t_const;
    end record;
    type SpectrogramLimeSDR_45_self_t_const_list_t_const is array (natural range <>) of SpectrogramLimeSDR_45.self_t_const;

    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; input: DataValid_0.self_t; ret_0:out DataValid_1.self_t);
    function SpectrogramLimeSDR(spect: Spectrogram_44.self_t; output: DataValid_1.self_t) return self_t;
end package;

package body SpectrogramLimeSDR_45 is
    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; input: DataValid_0.self_t; ret_0:out DataValid_1.self_t) is
    -- Args:
    -- input (DataValid): 12 bit IQ, -1.0 ... 1.0 range
    -- Returns:
    -- DataValid: Upper 32 bits from the spectrogram core.
        variable spect: DataValid_2.self_t;
        variable pyha_ret_0: DataValid_2.self_t;
    begin

        Spectrogram_44.main(self.spect, self_next.spect, self_const.spect, input, pyha_ret_0);
        spect := pyha_ret_0;

        self_next.output.data := resize(spect.data, -7, -38, fixed_wrap, fixed_truncate);
        self_next.output.valid := spect.valid;
        ret_0 := self.output;
        return;
    end procedure;

    function SpectrogramLimeSDR(spect: Spectrogram_44.self_t; output: DataValid_1.self_t) return self_t is
        -- constructor
        variable self: self_t;
    begin
        self.spect := spect;
        self.output := output;
        return self;
    end function;
end package body;
